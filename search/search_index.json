{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"What Can DOFLinx Do?","text":"<p>One example, integrated with MAME:</p> <ul> <li>Drive toys on the following output boards in any combination<ul> <li>LEDWiz</li> <li>Pinscape</li> <li>Dude's Cab</li> <li>PinOne</li> <li>PacDrive</li> <li>PacLED64</li> <li>Ultimate I/O</li> <li>PinControl 1</li> <li>PinControl 2</li> <li>Sainsmart</li> <li>Teensy -- Addressable LEDs</li> <li>Wesmos -- Addressable LEDs</li> </ul> </li> <li>In Basic or Fallback mode trigger solenoids for flipper force     feedback for any pinball game emulator based on the flipper keys</li> <li>Use keyboard, Xbox controller and joystick buttons for input</li> <li>For Pinball FX and Pinball FX3 generate nudge in game by physically     nudging your table using a Pinscape accelerometer</li> <li>Use direct integration from Pinball FX built with Zen to get table     events<ul> <li>Map those events to cabinet actions for<ul> <li>Use back glasses that illuminate based on table events (not simply animated), just like a real pinball machine</li> <li>Solenoids / contactors for flippers, slings, bumpers and         drop targets</li> <li>5 x RGB Flashers</li> <li>RGB cabinet lighting</li> <li>Addressable LED effects</li> <li>Fan / Blower</li> <li>Shaker</li> <li>Gear motor</li> <li>3 x Chimes</li> <li>Bell</li> <li>Strobe</li> <li>Beacon</li> <li>Knocker</li> <li>Run a shell script / external program</li> <li>Load and drive animations in DirectB2S backglasses</li> <li>Play surround sound force feedback sounds for stereo, 5.1 or         7.1 sound systems</li> <li>Output to Pixelcade LED and LCD displays</li> <li>Set a table specific colour palette</li> <li>Set RGB buttons such as flipper and magna save to any colour         combination per table</li> <li>Illuminate mono buttons</li> </ul> </li> <li>Comes with a default set of FX mapping files that you can edit       to add or change what table events create cabinet actions</li> </ul> </li> <li>Combined with the DOFLinx specific MAME version monitor key emulator     events and real time scores to derive events that drive actions<ul> <li>Map those events to cabinet actions for<ul> <li>Solenoids / contactors for flippers, slings, bumpers and         drop targets</li> <li>5 x RGB Flashers</li> <li>RGB cabinet lighting</li> <li>Addressable LED effects</li> <li>Fan / Blower</li> <li>Shaker</li> <li>Gear motor</li> <li>3 x Chimes</li> <li>Bell</li> <li>Strobe</li> <li>Beacon</li> <li>Knocker</li> <li>Run a shell script / external program</li> <li>Load and drive animations in DirectB2S backglasses</li> <li>Play surround sound force feedback sounds for stereo, 5.1 or         7.1 sound systems</li> <li>In built live score screen</li> <li>In built high score screen</li> <li>Drive Pixelcade LED, LCD, dot matrix and meta data displays</li> <li>Present MAME marquee artwork on Pixelcade LED and LCD, plus         any DMD using DMDExt</li> <li>Show animations on Pixelcade LED and / or LCD screens based         on in game achievements</li> <li>Show scores and animations on any DMD using DMDExt via         DOF2DMD</li> <li>Show high scorces</li> <li>Set a table specific colour palette</li> <li>Set RGB buttons such as flipper and magna save to any colour         combination per table</li> <li>Illuminate mono buttons</li> <li>Drive any DMD using DMDExt via DOF2DMD</li> </ul> </li> <li>Comes with a default set of MAME mapping files that you can edit       to add or change what table events create cabinet actions</li> <li>Cabinet buttons to used as a trigger for actions. Allows things       like \"fire\" button the be set to run something like a \"flash       blast\" effect on addressable LEDs, or a fire sound in SSF</li> </ul> </li> <li>Monitor Pinball FX3 and derive events to run table actions<ul> <li>Map those events to cabinet actions for<ul> <li>Use back glasses that illuminate based on table events (not simply animated), just like a real pinball machine</li> <li>Solenoids / contactors for flippers, slings, bumpers and         drop targets</li> <li>5 x RGB Flashers</li> <li>RGB cabinet lighting</li> <li>Addressable LED effects</li> <li>Fan / Blower</li> <li>Shaker</li> <li>Gear motor</li> <li>3 x Chimes</li> <li>Bell</li> <li>Strobe</li> <li>Beacon</li> <li>Knocker</li> <li>Load and drive animations in DirectB2S backglasses</li> <li>Surround Sound Force feeback via Pinup Popper</li> <li>Set a table specific colour palette</li> <li>Set RGB buttons such as flipper and magna save to any colour         combination per table</li> <li>Illuminate mono buttons</li> </ul> </li> <li>Comes with two default sets of FX3 mapping files for physical       and surround sound cabinets</li> </ul> </li> <li>Monitor Pinball FX2 and derive events to run table actions<ul> <li>Map those events to cabinet actions for<ul> <li>Use back glasses that illuminate based on table events (not simply animated), just like a real pinball machine</li> <li>Solenoids / contactors for flippers, slings, bumpers and         drop targets</li> <li>5 x RGB Flashers</li> <li>RGB cabinet lighting</li> <li>Addressable LED effects</li> <li>Fan / Blower</li> <li>Shaker</li> <li>Gear motor</li> <li>3 x Chimes</li> <li>Bell</li> <li>Strobe</li> <li>Beacon</li> <li>Knocker</li> <li>Load and drive animations in DirectB2S backglasses</li> <li>Set a table specific colour palette</li> <li>Set RGB buttons such as flipper and magna save to any colour         combination per table</li> <li>Illuminate mono buttons</li> </ul> </li> <li>A default sets of FX2 mapping files are availble</li> </ul> </li> <li>Monitor Future Pinball for actions coded to drive toys for<ul> <li>Solenoids / contactors for flippers, slings, bumpers and drop       targets</li> <li>5 x RGB Flashers</li> <li>RGB cabinet lighting</li> <li>Addressable LED effects</li> <li>Fan / Blower</li> <li>Shaker</li> <li>Gear motor</li> <li>3 x Chimes</li> <li>Bell</li> <li>Strobe</li> <li>Beacon</li> <li>Knocker</li> </ul> </li> <li>Cabinet attract mode<ul> <li>Run any series or parallel pattern for your lighting, LEDs,       button lights, RGB lighting and flashers, plus any other       directly attached toy</li> <li>Change pattern at any time</li> <li>Stop and start by simply sending DOFLinx a message</li> <li>Start via inactivity timer</li> <li>Display marquees on Pixelcade or DMD device(s)</li> </ul> </li> <li>Front and menu system navigation allows<ul> <li>display of game information and high scores for currently       displayed game</li> <li>display of current marquee via Pixelcade</li> <li>display of a directB2S backglass</li> <li>Fully configurable use of any output and combination of outputs       for any navigation event, ie forward, back, page forward, page       back, select. Outputs are the same as in game actions, ie       solenoids, flashers, addressable LED effects</li> <li>Currently has been setup for Pinup Popper</li> </ul> </li> <li>Drive Xbox rumble motors</li> <li>Light any combination of RGB or mono buttons</li> <li>Comprehensive set of test screens for devices, flashers, back     glasses, ROM effects, Pixelcade, etc.</li> <li>Built in configuration tool for all core setup parameters</li> <li>Ability to change most configuration while running allowing for     different behaviour between emulators and game / tables. Usually run     from the front end menu system when a game / table is selected</li> <li>Local on screen and log file for debug, or monitor the debugging     from a different machine via a TCP link</li> <li>Push focus back to MAME, Pinball FX, Pinball FX3 or Pinball FX2 to     avoid the emulator not being in focus at start</li> <li>Setup any number of colours using a name and RGB FFFFFF format</li> <li>Link a button press to turning on an output device</li> <li>Link a button to turn on a RGB device with any colour</li> <li>Set buttons to toggle RGB devices on / off with any colour</li> <li>Night mode to suppress noisy toys when others want to sleep</li> <li>RGB cabinet lighting to be random, multiple colours, fixed</li> <li>Trigger RGB lighting changes by timer, flipper press or remain fixed</li> <li>Built in settings menu that pops up like a pinball configuration on     the DMD, used to turn various items on / off while running in     cabinet mode, ie night mode, RGB lighting or with the assistance of     some hardware flip-flop an output</li> <li>Use real time messaging to DOFLinx to do things such as<ul> <li>stop (kill) other processes</li> <li>Light buttons</li> <li>Shutdown DOFLinx</li> <li>Run a INI file with updated parameters</li> <li>Turn on a RGB device for a specified time with a specified       colour</li> </ul> </li> </ul>"},{"location":"07_Help.html","title":"Help","text":"<p>For more help .....</p> <p>a)  Read the full guide</p> <p>b)  Go over to www.vpforums.org/index.php?showforum=104 and search out your issue.  If you can\u2019t find what you are looking for then start a new support thread (be nice and don\u2019t divert an old one unless you have exactly the same issue).  I know one of the very knowledgeable and friendly people there will help you out</p> <p>c)  Visit Discord over here https://discord.com/channels/652274650524418078/652282185889349656 </p> <p>d)  Try to gain an understanding of how things are working, this will allow you to help yourself more often than you think.</p> <p>Above all else, enjoy and have fun!</p>"},{"location":"Misc/05_DOF_TO_DOFLinx_Ports.html","title":"DOF to DOFLinx Device and Port Assignments","text":"<p>This guide is designed to help you understand the relationship between DOF settings and DOFLinx configuration.\u00a0 If you just have DOF installed for the drivers (ie using on a MAME cabinet), then you do not need a DOF setup so this is probably not relevant.</p> <p>So, you have setup DOF and now want to translate those toys for use in DOFLinx.\u00a0 It is fairly easy once you get the hang of it.</p> <p>Everywhere in DOFLinx the assignment of a toy needs a four digit assignment in the form of DOOO, where D is the device number and OOO is the output.\u00a0 For example, to setup the Left Flipper the line in the DOFLinx.INI configuration file will be:</p> <p>LINK_LF= \u2026\u2026</p> <p>For the parameter order and details see the full guide for each different line.\u00a0 In all cases, the first item will be the device/port.\u00a0 For my cabinet the line looks like:</p> <p>LINK_LF=2017,50,5000,255</p> <p>In the DOF Config Tool you setup each output controller you have and assign the toys.\u00a0 Each type of controller starts numbering from 1.\u00a0 So, if you have two LEDWiz and a Pinscape you will have LEDWiz #1, LedWiz #2 and Pinscape #1.\u00a0 You can see this in the screen shots below for my cabinet configuration.</p> <p></p> <p></p> <p></p> <p></p> <p>For DOFLinx the controller devices start being numbered at #1 and continue from there.\u00a0 This is with the exception of a Teensy / wesmos controller used for addressable LEDs, that is not assigned a controller ID # by DOFLinx as you never link directly to the addressable LED toys.</p> <p>The numbering for devices in DOFLinx starts with Pinscape Controllers, then LEDWiz, and works through all the other supported controllers.\u00a0 The easiest way to get the device numbers is to just look at DOFLinx\u2019s log screen / file.</p> <p></p> <p>You can see that there is one output device, a Pinscape, with 24 outputs.\u00a0 This means that your toys can be connected to D =1 and OOO=001 to 024 in the format DOOO.\u00a0 So if your Right Flipper is connected to the Pinscape port #9 then your would use DOOO = 1009.\u00a0 The parameter line in your DOFLinx.ini would look something like:</p> <p>LINK_RF=1009,50,5000,255</p> <p>For my cabinet my DOFLinx log looks like this:</p> <p></p> <p>This means that for my pinball cabinet the devices in DOFLinx are:</p> <p>Device #1\u00a0 Pinscape</p> <p>Device #2 = LEDWiz #1</p> <p>Device #3 = LEDWiz #2</p> <p>I can possibly have toys connected to D=1, 2 or 3.\u00a0 For the LEDWiz with 32 outputs OOO can be 001 to 032 inclusive.\u00a0 For the Pinscape OO can be 001 to 022.\u00a0 This gives 101-122, 201-232,301-332 as valid outputs for my toys.\u00a0</p> <p>Do remember of course that RGB toys are specified by their RED port.\u00a0 So if you have RGB lighting connected to device #2 ports 9, 10, 11 for RED, GREEN and BLUE the RGB_OUTPUT= DOOO will be 2009, the RED port.</p> <p>This means the translation from my DOF Configuration Tool setup to DOFLinx is (I only wrote enough numbers on there in lime green to show the pattern, I\u2019m sure the rest is quite obvious):</p> <p></p> <p></p> <p>Below is the main toy definition section of my current cabinet file.</p> <p></p>"},{"location":"Misc/13_Testing_Your_Setup.html","title":"Testing Your Setup","text":"<p>Of course you can dive straight in, fire it up and kick off your emulator. This can be a bit confusing, and the recycle time to change and test again can get annoying. Instead set DEBUG=1, start-up DOFLinx and press the \"Fake Emulation On\" button, it will now change to a \"Fake Emulation Off\" button.</p> <p>Once activated you can try out all of your keys, colours, etc. If you need to change things, just use \"Quit\", edit your INI and go again. When you're done, edit your INI back to DEBUG=0.</p>"},{"location":"Misc/14_Other_Use__less__ful_Info.html","title":"Other Use~~less~~ful Info","text":"<ul> <li>DOFLinx was written by DDH69 in 2016 because he wanted his force feedback   flippers to work within Pinball FX2</li> <li>All of this made possible by DOF -- thanks Swisslizard</li> <li>The main discussion on this utility happens over at   www.vpforums.org</li> <li>SainSmart support testing by doogie2301</li> <li>Numerous (OK, lots) of good ideas and testing from TerryRed</li> <li>PacLed64 testing by GInsonic</li> <li>KL25Z emulating LEDWiz testing by davidlinch and Mace</li> <li>Inspiration and encouragement for full Pinball FX2 force feedback   from gigalula</li> <li>Pinscape DOF Framework coding by mjr</li> <li>Pinscape native testing by me</li> <li>Ultimate I/O DOF Framework coding by rambo3</li> <li>Ultimate I/O testing by BritXpatUSA</li> <li>B2S testing by Outhere and Terryred</li> <li>Addressable LED work with TerryRed</li> <li>Most of the hard work for FX3 by gigalula -- thank you</li> <li>PinControl2 testing by Charly Harper and BambiPlattfuss</li> <li>Some FX3 keyboard simulation ideas by Tom Speirs</li> <li>PinControl1 testing by Charly Harper</li> <li>PacDrive testing by Bjonne</li> <li>Pixelcade assitance by Al</li> <li>Zen and freezy for PinballFx integration</li> <li>Inspiration to move to Github and intial setup of on-line docs by ojacques</li> <li>This is not for commercial use. If you have needs, make contact.</li> </ul>"},{"location":"Misc/15_Examples___Screen_Shots.html","title":"Examples &amp; Screen Shots","text":""},{"location":"Misc/15_Examples___Screen_Shots.html#setup-as-set-and-forget","title":"Setup as 'Set and Forget'","text":"<p>Go to your start-up folder</p> <p></p> <p>Create a shortcut</p> <p></p> <p>End up with it in your start-up items</p> <p></p>"},{"location":"Misc/15_Examples___Screen_Shots.html#where-to-find-the-names-for-the-processes-parameter","title":"Where to Find the Names for the \"PROCESSES=\" Parameter","text":"<p>There are two ways to do this;</p> <ol> <li>Via DOFLinx itself<ol> <li>Start DOFLinx with DEBUG=1</li> <li>Right click on the message logging list box</li> <li>Select the \"Show Running Processes\" menu option</li> <li>Note down the relevant name from the list</li> </ol> </li> <li>Look in Task Manager as per the images below;</li> </ol> <p></p> <p>Locate the process you want to monitor, right click and use the name as you see below (VPinball_9_9_1) without the EXE. Nb, your name is likely to be different, this is just how I have VP version 9.9.1 named.</p> <p></p>"},{"location":"Misc/15_Examples___Screen_Shots.html#add-flipper-force-feedback-to-selected-vp-tables","title":"Add Flipper Force Feedback to Selected VP Tables","text":"<p>Ensure you have your VP process as one of the processes in your PROCESSES= parameter, ie \"PROCESSES=Pinball FX2,VPinball_9_9_1\". In fact, it is more likely to be the process name for your old versions of VP since almost everything VPX is DOF enabled (yay!)</p> <p>Setup your 'Launch Before' and 'Launch After' in your favourite front end like the sample below. You can send messages to DOFLinx in multiple ways, below shows it done using the small utility provided.</p> <p>Create a dummy file named \"TABLEFILE.DOFLINX\" in your VP tables folder. The \"TABLEFILE\" name is the same name as you VPT or VPX, and B2S file for that table. This can be seen in the example below.</p> <p>The logic is:</p> <ol> <li>DOFLinx is running in Set and Forget mode</li> <li>The 'Launch Before' program tells DOFLinx the current GAME_FLAG_FILE   to look for</li> <li>When the VP process starts DOFLinx checks if the flag file exists</li> <li>If a flag file is set to something, then one of two things can   happen;     1. The file name provided exists, in which case DOFLinx 'wakes up'     1. The file name provided does not exist, in which case DOFLinx stays 'sleeping'</li> </ol> <p>Note</p> <p>The end result is that DOFLinx runs in the background at all times monitoring for VP, but only selectively 'wakes up' when a flag file is present. This allows VP to be monitored at all times and wake as required.</p> <p></p> <p></p>"},{"location":"Misc/20_Settings_Pop_Up_Menu.html","title":"Settings Pop Up Menu","text":"<p>The setting pop up menu is designed to allow you to control items within your cabinet. It is not about configuring DOFLinx. There are two types of settings, items that turn device ports on / off and hence control cabinet items electrically, plus one special setting for NIGHT mode.</p> <p>To use settings that control electrical items, you must have those electrical items wired up appropriately. In my case I wanted to be able to turn on / off some of my lighting effects easily so that different people in my house like / don't like. I started off by having a physical switch inside the cabinet to switch the positive rail of the under cabinet lighting, I got sick of that. So then I installed a relay instead of that switch, the control for that relay is wired to another LEDWiz output. This means by switching the output to the relay I can electrically switch on / off my under cabinet lighting. The reason I didn't want to do this via configuration and disable it is because there are multiple configurations and they have a habit of going wrong at some stage, this is a quick and simple way.</p> <p>Below is the standard connection for a toy from your device.</p> <p></p> <p>Above is the modified connection to allow control via the Settings option. It differs by the addition of a relay on the switch power line to the toy. The relay is controlled via another output device output port.</p> <p>Each time an application opens the DOF framework it resets the outputs on each device. DOFLinx opens and closes DOF as required when tables / emulators are started and stopped. To avoid the relay resetting for your output it is possible (and desirable) to add a latching circuit. That means one signal to turn on a relay / MOSFET and another to turn it off. Doing this ensures that the device you are controlling remains on / off until you specifically change that setting. A logical diagram of this is below.</p> <p></p> <p>A cheap and easy latching circuit that I have used with a Pinscape is shown below.</p> <p></p> <p>The Settings pop up menu is a bit reminiscent of a traditional pinball configuration on the DMD. As such I've made it so you can drag the pop up menu to your DMD (or what ever screen you like) and size it appropriately. When you exit the location and size will be saved in the registry for next time. (HKEY_LOCAL_USER\\Software\\DOFLinx\\XX. If anything goes wrong you can safely delete the entire DOFLinx tree from the registry, it will recreate next time.</p> <p></p> <p>There is one \"special\", and hence reserved, ID code that can be used, that is \"NIGHT\", so \"SETTING=NIGHT \". This special setting allows the internal DOFLinx flag for NIGHT_MODE to be toggled.</p> <p>An example of the configuration that would produce the settings pop up above and use Left Shift + Right Shift + Left Control + Right Control (all flipper and magna save buttons in my case) at the same time, along with Left Shift for UP, Right Shift for DOWN, Escape for EXIT and 0 for CHANGE is:</p> <p>SETTING_ACTIVATE=A0,A1,A2,A3</p> <p>SETTING_UP=A0</p> <p>SETTING_DOWN=A1</p> <p>SETTING_CHANGE=31</p> <p>SETTING_EXIT=1B</p> <p>SETTING_MESSAGE=L Flipper = Up, R Flipper = Down, Start = Change, EB = Exit</p> <p>SETTING=UnderCab,101,Under cabinet lighting disabled,Off,Y</p> <p>SETTING=Flashers,102,Flashers Enabled,On,Y</p> <p>SETTING=Addressable,103,Addressable LEDS Enabled,On,N</p> <p>SETTING=NIGHT,,Night Mode,Off,Y</p>"},{"location":"getting-started/02_What_is_DOFLinx.html","title":"What is DOFLinx","text":"<p>DOFLinx is a utility program designed to work with the DOF (Direct Output Framework) R3 (from version 6.20 onward this is the R3++ version of DOF) to provide some additional functionality for pinball emulators that don't do it directly. It started life just adding flipper force feedback to Pinball FX2 and was called DOFFX2.</p> <p>Some of the features are:</p> <ul> <li>Basic Fire flipper solenoids / contactors from with Pinball FX2,   Pinball FX3, Pinball Arcade, etc using keyboard intercept</li> <li>Full force feedback for Pinball FX2 and FX3 for games that have been   memory mapped</li> <li>Link to Future Pinball and process messages to enable fully scripted   force feedback</li> <li>Add flipper force feedback and RGB easily to tables with no force   feedback coded</li> <li>Have RGB devices automatically cycle colours based on a variety of   triggers</li> <li>Link a key to turn on one or more outputs while pressed</li> <li>Link a key to set an RGB device to a colour</li> <li>Link a key to turn an RGB device to a colour while pressed then   revert back</li> <li>Game specific colour sets</li> <li>Control your LEDs and solenoids from various places, just for fun</li> <li>Respond to messages sent from other scripts or applications to   trigger outputs and colours</li> <li>Settings menu to control relays and other devices in your cabinet   that turn on / off features</li> <li>Link to B2S backglasses from Pinball FX2 and FX3</li> <li>Drive addressable LEDs setup in the DOF from Pinball FX2 and FX3 and   Future Pinball triggers</li> <li>Run PUPlayer videos from FP and FX2 / 3</li> <li>Produce nudge into FX3 from Pinscape accelerometer</li> <li>Support for XBox (XINPUT) and Joystick (DINPUT) controllers</li> <li>Joystick based analogue joystick to trigger FX2 and FX3 ball launch</li> <li>Drive Xbox rumble motors from table trigger events in FX2, FX3 and   FP</li> <li>Connection to MAME for inputs and outputs</li> <li>Drive Pixelcade devices</li> <li>SSF 7.1</li> <li>Drive DMD's via DOF2DMD using DMDExt</li> </ul> <p>DOFLinx can operate in a number of ways, in fact it can do them all in combination to get the best effect. There are a couple of levels of force feedback available, full force feedback where specific triggers make DOF devices \"fire\" and light up. Then there is simple force feedback, where flipper keys as the input are \"listened\" for and when press \"fire\" DOF devices. When fully configured DOFLinx will attempt to use the most detailed level of force feedback first, then progressively drop back to simple force feedback dependant on what's been configured and what is available.</p> <p>Full force feedback is available via Future Pinball tables scripted for DOFLinx and for Pinball FX2 / 3 games with memory map files.</p> <p>Simple force feedback \"listens\" for flipper (and other configured key) presses and activates the configured DOF devices. It can also run a background colour display providing automated colour for tables with nothing specifically coded.</p> <p>The fall-back process is quite simple. For Future Pinball DOFLinx will first check if the table has been coded for DOFLinx, if so you have a fully active and full featured force feedback link. If not DOFLinx will check if the table has been flagged specifically, or simply setup in the absence of a full force feedback link, to selectively use simple force feedback.</p> <p>The fall-back process for Pinball FX2 and FX3 is similar. DOFLinx will first check for a trigger configuration file for the table being played. If one is present, then full force feedback is turned on and scripted actions are taken when the various trigger events occur. If no trigger configuration file exists then simple force feedback is enabled.</p>"},{"location":"getting-started/03_Requirements.html","title":"Requirements","text":"<ul> <li>A pinball cabinet -- but then who doesn't have one of these</li> <li>If you are running toys (solenoids, flashers, etc)DOF installed and running (Look here   http://mjrnet.org/pinscape/dll-updates.html  If you are running an arcade machine with MAME, perhaps DOF2DMD or Pexelcade, then you will not need a full installation of DOF, but it can't hurt if you do.  Of course if, like me, your arcadfe machine has a Pinscape, Dude's Cab, Teensy, then you will need DOF.</li> <li>At least one LEDWiz, Pinscape, PacLed64, Ultimate I/O, PinControl1,   PinControl2, PacDrive, SainSmart, PinOne or Dude's Cab controller   board</li> <li>If you want, a Teensy (or similar) setup for addressable LEDs in DOF</li> <li>Keyboard input (or emulator) to your favourite pinball emulator</li> <li>Possibly some Xbox or DINPUT controllers</li> <li>Some patience</li> </ul>"},{"location":"getting-started/04_Installation.html","title":"Installation","text":"<ol> <li>Create a folder for DOFLinx, let\u2019s call it C:\\DOFLINX</li> <li>Download DOFLinx from here https://github.com/DOFLinx/DOFLinx/releases into C:\\DOFLINX</li> <li>Unblock the downloaded DOFLinx.Vxx.ZIP file</li> <li>Unpack C:\\DOFLINX\\DOFLinx.Vxx.ZIP into the same folder</li> <li>Copy the premade DOFLinx-Shortcut.lnk to startup.<p>To open the startup folder in Windows use Win-R and type in shell:startup</p> </li> </ol> <p> </p> <ol> <li> <p>Run DOFLinxConfig</p> <p>a.   Check that you do not have any errors and that you understand any warnings</p> <p>b.   Press the \u201cConfigure\u201d button and work through all of your settings.  Alternatively you can edit the supplied <code>DOFLinx.INI</code></p> </li> </ol> <p></p> <ol> <li>Reboot</li> <li>Setup any emulators to work with DOFLinx, ie PinballFX or MAME</li> <li>Start Pinball FX or MAME and enjoy</li> </ol> <p>Once installed you should have an installation looking something like that below.  Note the image below includes the Direct Output Framework (DOF) installed for running of output boards and toys (flashers, solenoids, etc)</p> <p></p>"},{"location":"getting-started/05_AfterInstallation.html","title":"After its Running","text":"<p>Once you have a working DOFLinx installation then you may want to do some of these things to make it more enjoyable</p> <ol> <li> <p>If you have the Direct Output Framework (DOF) loaded (usually pinball users or MAME cabinet users without output toys), normally located in C:\\DirectOutput folder, then delete the DirectOutput.dll file in your C:\\DOFLinx folder.  This will ensure that DOFlinx uses your current installation and not a local copy of the dll.  It will help you out later on when you upgrade DOF.</p> </li> <li> <p>If you have an output device (Dude\u2019s Cab, PinOne, Pinscape, LEDWiz, PacLED, etc) with toys (solenoids, flashers, etc) then run DOFLinxConfig and use \u201cConfigure\u201d to setup your toys.  Alternatively read the detailed guide and edit your C:\\DOFLINX\\Config\\DOFLinx.INI directly</p> </li> <li>If you\u2019ve got Pinball FX then follow the \u201cEnabling Pinball FX for DOFLinx\u201d guide to get full integration from Pinball FX.</li> <li>If you\u2019ve got MAME then follow the \u201cGuide for Setting up DOFLinx with MAME\u201d guide to get full integration from MAME.</li> </ol>"},{"location":"getting-started/05_AfterInstallation.html#building-your-software-installation","title":"Building Your Software Installation","text":"<p>Let\u2019s get the software loaded.</p> <ol> <li> <p>Install your game.</p> <p>1.  PinballFX, download the Steam or Epic versions</p> <p>2.  MAME</p> <p>a)  Install MAME from here https://www.mamedev.org/release.html</p> <p>b)  Substitute in the correct MAME_XXX.exe, where XXX is the version number) from the \\MAME_EXE folder in the DOFLinx installation zip to be MAME.exe in your MAME folder</p> </li> <li> <p>If you are running PinBall FX then install all of the xxx.directb2s files into the folder you pointed to with the PATH_FX_B2S= parameter (default C:\\DOFLINX\\B2S) from here https://github.com/DOFLinx/B2S-Back-Glasses/releases</p> </li> </ol>"},{"location":"getting-started/06_PinballFX.html","title":"Enabling Pinball FX","text":"<p>1.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Copy DOFLinxTrigger.dll from where you unzipped the DOFLinx download to the same folder as PinBallFX-Win64-Shipping.exe</p> <p></p> <p>2.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Make sure that you\u2019ve got the FX files from the \\FX folder in the DOFLinx download zip in a folder where you want them, ie C:\\DOFLinx\\PinballFX\\</p> <p>3.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Edit your DOFLinx.INI to</p> <p>a.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Make Pinball FX activate DOFLinx by adding in the PROCESSES= line PinballFX-Win64-Shipping , So if you wanted MAME and PinballFX to activate DOFLinx you would have PROCESSES=Mame64,PinballFX-Win64-Shipping Note; PinballFX-Win64-Shipping is the process to monitor for, but you still run PinballFX.exe to start PinballFX.</p> <p>b.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 have the PATH_FX= parameter point to the place you put the FX files in step #2 above</p> <p>c.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 have the PATH_FX_B2S= parameter point to the place you have / will place your set of Pinball FX active back glasses  </p> <p></p> <p>4.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Get the complete set of active back glasses from https://github.com/DOFLinx/B2S-Back-Glasses/releases and place them in the folder you just setup in 3c above.  </p> <p></p> <p>5.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Start Pinball FX</p> <p>6.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Go to Settings | Cabinet</p> <p>7.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Activate cabinet mode if it is not already</p> <p>8.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Go to the DOFLinx tab, enable it</p> <p></p> <p>9.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Start it all up and have fun.</p> <p>Note</p> <p>A couple of people have reported that PinballFX will not \u201ctalk\u201d to DOFLinx if DOFLinx is set to  \u201crun as administrator\u201d.\u00a0 Check this if you have a problem. Running as administrator is an older concept with a lot of pinball software that is not needed any longer.</p>"},{"location":"getting-started/07_MAME.html","title":"Setting Up DOFLinx with MAME","text":"<p>This guide will explain how to setup a dedicated arcade cabinet or pinball machine with MAME and \u00a0force feedback, live scores screen, addressable LEDs .\u00a0 The guide is modelled on the setting up of my dedicated arcade cabinet, Arcade Universe.\u00a0 If you have a pinball cabinet with MAME on it as well, then this guide will also help you understand what additional settings are required for DOFLinx.</p> <p> </p>"},{"location":"getting-started/07_MAME.html#prerequisites","title":"Prerequisites","text":"<p>To setup an arcade cabinet with force feedback you will need the following;</p> <ul> <li>Widows 64 bit, preferably Windows 10 or 11</li> <li>Direct Output Framework (DOF) if you are going to run addressable LEDs or toys</li> <li>MAME</li> <li>Probably some sort or front end, ie Pinup Popper</li> <li>An output device, ie Pinscape, LEDWiz, PacLED64, UIO, Pincontrol1, PinControl2, SainSmart, PacDrive, PinOne, Dude\u2019s Cab</li> <li>Some toys</li> <li>Perhaps some addressable LEDs on a Teensy</li> </ul> <p>In my Arcade Universe cabinet I have:</p> <ul> <li>Pinup Popper</li> <li>A Pinscape with 50+ outputs</li> <li>RGB lighting</li> <li>A teensy and addressable LEDs, a 96x8 matrix (Back FX) and two 60 LEDs (Left and Right MX)</li> <li>5 RGB flashers</li> <li>A knocker</li> <li>Three solenoids configured as mid-left, mid-centre, mid-right</li> <li>Six RGB buttons for Start (coin), Exit, Reset, Pause, player 1 and Player2</li> <li>Mono LED buttons for System menu, coin, cheat, menu volume up / down</li> <li>A coin door with a couple of LED lit buttons and a coin door switch</li> <li>A joystick</li> <li>Eight buttons for game play, B1 to B8</li> <li>Main monitor</li> <li>A long shop display as screen #2 for the marquee</li> <li>A small monitor below the main play screen for high scores and live score</li> <li>Relays to switch the RGB, MX LEDs and flashers on / off from the DOFLinx Setup menu</li> </ul> <p>You don\u2019t need all of this, but much more is unlikely to get used productively.\u00a0 Having said that, if you find a way or an idea, do let me know!</p> <p> </p> <p>Buttons all unlit\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Buttons lit for Gyrus</p> <p></p> <p>Front panel buttons</p> <p> </p> <p>Marquee at main menu\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Marquee when selecting and playing 1941</p> <p> </p> <p>The DOFLinx built in score screen with Popper menu and displaying high scores on the left.\u00a0 On the right is the score screen during game play.\u00a0 To turn on the score screen add SCORE_SCREEN=1 to your DOFLinx.ini.\u00a0 You can drag the score screen around to the desired location during game play, but its easier if you start DOFLinx with DEBUG=1 and then use the right-click menu option to position and setup the screen.</p>"},{"location":"getting-started/07_MAME.html#software-setup","title":"Software Setup","text":"<p>The software required piece by piece is described below.</p>"},{"location":"getting-started/07_MAME.html#mame","title":"MAME","text":"<p>Within the DOFLinx release zip there is a subfolder for MAME_EXE.\u00a0 Within this folder are version(s) of MAME that have been modified to work with DOFLinx.\u00a0 Pick a version of MAME that you wish to use, note the version, then install that version of MAME as freely available on the web (look in the downloads section of https://www.mamedev.org/).</p> <p>Once you have installed the standard release of MAME then replace the MAME.EXE with the MAME_xxx.EXE from the DOFLinx release zip.\u00a0 Just rename MAME_xxx.EXE to MAME.EXE.</p> <p>Only the 64 bit version has been compiled and made available.</p> <p>You will of course need your ROMs loaded in the ROM folder and any other MAME related material that you plan to use, ie cheats, marquees, etc.\u00a0 Everything other than the inter-process communication is standard MAME.</p> <p>Now that MAME is installed you need to modify your MAME.INI file to enable the TCP communication with MAME.\u00a0 The section to modify is in the \u201cOSD OUPUT OPTIONS\u201d.\u00a0 Set the \u201coutput\u201d to \u201cnetwork\u201d.\u00a0 This is critical, nothing will work without this.</p> <pre><code># OSD OUTPUT OPTIONS  \n#  \noutput\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 network\n</code></pre> <p>Doing this allows DOFLinx and MAME to \u201cchat\u201d over TCP/IP using the default loopback address, so the traffic never leaves your PC, but is still on the standard TCP/IP stack.\u00a0 The TCP/IP communication was introduced into MAME a fair way back, all I\u2019ve done is add more messages.</p>"},{"location":"getting-started/07_MAME.html#dof","title":"DOF","text":"<p>If you have a combined pinball / MAME cabinet, or like me, you have addressable LEDs in your arcade cabinet, then you need DOF installed as well.\u00a0 If you just have an output device like a Dude\u2019s Cab, LEDWiz, PinControl, etc then you do not need to install DOF.</p> <p>I am assuming the DOF installation is in the C:\\DirectOutput\\ folder with config files in the C:\\DirectOutput\\Config\\ folder.\u00a0 If you are using a Teensy for addressable LEDs you will need a valid GlobalConfig.XML and Cabinet.XML file.</p>"},{"location":"getting-started/07_MAME.html#hi2txt","title":"Hi2Txt","text":"<p>If you want DOFLinx to display high scores on either the built in DOFLinx score screen (as per images above) or a Pixelcade / DMD (via DOF2DMD) device then you will need to install Hi2Txt.\u00a0 Hi2Txt can be found here https://greatstoneex.github.io/hi2txt-doc/ .\u00a0 You can place it where ever you like but for this I\u2019ll assume something logical like C:\\Hi2Txt\\</p> <p>You then need to setup the parameter in DOFLinx.ini to point to your installation, so PATH_HI2TXT=C:\\Hi2Txt\\</p> <p>Or where ever you put your installation.</p>"},{"location":"getting-started/07_MAME.html#doflinx","title":"DOFLinx","text":"<p>Install DOFLinx into your chosen folder, usually C:\\DOFLinx.\u00a0 Unblock the EXE and DLL files.\u00a0 Create sub-folders for the DOFLinx configuration and MAME files.\u00a0 Place the MAME files into the MAME folder.</p> <p>Note</p> <p>Some of the images show the older installation of C:\\DirectOutput not C:\\DOFLinx, please read as C:\\DOFLinx</p> <p>You should end up with a structure that looks something like this:</p> <p></p> <p>Create a shortcut for DOFLinx and place that in your Windows Startup Folder.\u00a0 The Shortcut needs to point to your DOFLinx.INI file.</p> <p></p> <p></p> <p></p> <p>Your shortcut to start DOFLinx can be as simple as starting DOFLinx with and setting up according to its configuration file, or something a little more complex.\u00a0 For Arcade Universe I want the cabinet name displayed on my MX LEDs.\u00a0 To achieve this, I run a batch file for DOFLinx startup that also sends the necessary configuration messages.</p> <p>You will notice in the batch file the loop that ensures the message is sent to DOFLinx.\u00a0 This is done because, like any program, DOFLinx needs a little time to start before being able to process messages.\u00a0 DOFLinxMsg returns an exit code that allows the success of sending the message to be determined.</p> <p></p> <p></p> <p>You now need to setup your DOFLinx.INI configuration file.\u00a0 This contains all of the settings that make your arcade cabinet unique.\u00a0 Details of all of the possible parameters can be found in the full DOFLinx guide.\u00a0 Below is a copy of my current Arcade Universe DOFLinx.INI file.\u00a0 The material in blue is the contents of the DOFLinx.INI file.\u00a0 Added in red are additional comments for this guide.</p> <p>Header and DEBUG section</p> <pre><code>####\n# The config file for DOFLinx on DDH69's Arcade Cabinet\n####\n# 0 = OFF (normal operation), 1 = ON - When ON a window will appear and a log file will be created in the EXE directory.\nDEBUG=0\n</code></pre> <p>Pointers to DOF files and path to MAME files</p> <pre><code># location of your standard DOF output configuration file\nCOLOUR_FILE=c:\\DOFLinx\\config\\directoutputconfig.ini\nDIRECTOUTPUTGLOBAL=C:\\DirectOutput\\config\\GlobalConfig.xml\nPATH_MAME=C:\\DOFLinx\\MAME\\\nCLOSE_ROMS=0\n</code></pre> <p>The activating process name and specifying that this is a MAME process</p> <pre><code># When to activate, and more specifically what is the MAME process to kick things off\nPROCESSES=Mame64\nMAME_PROCESS=Mame64\n</code></pre> <p>Required if you are doing some development of MAME files of generally inquisitive, can be removed</p> <pre><code># Because I want the get triggers from each game as I play it, set this path to something\nMAME_TRIGGER_OUTPUT_PATH=C:\\MAMETriggers\\\n</code></pre> <p>MAME specific adjustment parameters</p> <pre><code># Shorten the default period between score checks because my computer is reasonably fast and its not impacting MAME game play\nMAME_SCORE_CHECK_PERIOD=100\n# Shorten these two defaults as I want effects driven by pressing the \"fire\" button to happen quickly, hence shorten the protective delays\nTRIGGER_DEBOUNCE_TIME=10\nDELAY_BETWEEN_KEY_PRESS=100\n</code></pre> <p>The details for setting up RGB cabinet lighting</p> <pre><code># What output(s) are used for RGB devices.\u00a0 Just enter the Red output number.\u00a0 Multiples can be entered separated by a comma\nRGB_OUTPUT=1062,1065\n# Rainbow - cycle through the colours, Random - pick a random next colour, A colour name as it appears in the DirectOutputConfig.ini file\nRGB_STYLE=RANDOM\n# What changes the colour?\u00a0 Time - set time period, Flipper = flipper press after the RGB_TRIGGER minimum time (to stop rapid colour changes)\nRGB_TRIGGER=TIME\n# Dependent on trigger selection the period between changes or the minimum time for change between flipper flips\nRGB_MIN_TIME=3000\n</code></pre> <p>The setting up of the toys section</p> <pre><code># And yes, I do have 3 solenoids and a knocker in my arcade cabinet\nLINK_ML=1038,50,500,255\nLINK_MC=1039,50,500,255\nLINK_MR=1040,50,500,255\nLINK_KN=1041,90,500,255\n#Setup my 5 flashers\nLINK_FLOL=1023\nLINK_FLIL=1026\nLINK_FLCN=1029\nLINK_FLIR=1032\nLINK_FLOR=1035\n</code></pre> <p>Configuration of the various cabinet buttons</p> <pre><code>#Configure all the buttons\nLINK_BUT_CN=1016,MONO,36,0000,MONO,35\u00a0\u00a0 Note #1 this line\nLINK_BUT_ST=1044,Lime,35\nLINK_BUT_EX=1047,Amber,1B\nLINK_BUT_RE=1050,Tomato,72\nLINK_BUT_PS=1053,Deep_Pink,50\nLINK_BUT_P1=1056,Cyan,31\nLINK_BUT_P2=1059,Orchid,32\nLINK_BUT_B1=1006,MONO,A2\nLINK_BUT_B2=1006,MONO,12\nLINK_BUT_CH=1019,MONO,75\n# The button(s) to turn on when MAME starts, ie the exit button LED\n# Since I'm using button names it need to happen after the LINK_ for the buttons are defined\nBUTTONS_LIT=BUT_ST\n</code></pre> <p>This gives the effect of lighting the button when its pressed</p> <pre><code># Let's make the volume up and down buttons light up when pressed\nKEY_TO_OUTPUT_TIMER=AE,122,500,AF,121,500\n</code></pre> <p>Not required by many, this section sets up a pop up DOFLinx menu that enables the turning on/off of various things during running operation.\u00a0 For some of these you will need supporting electronics and cabling.\u00a0 It enables me to turn on / off my RGB cabinet lighting, addressable LEDs and flashers.</p> <pre><code>####\n# Activated the settings menu by Left Joystick and 2P button\n# Use this settings menu to turn on / off my various lighting effects\nSETTING_ACTIVATE=25,32\nSETTING_UP=26\nSETTING_DOWN=28\nSETTING_CHANGE=35\nSETTING_EXIT=1B\nSETTING_MESSAGE=Joystick = Up/Down, Start = Change, Exit = Exit\nSETTING=RGB,107,Rear RGB Lighting Enabled,Off,Y,108,100\nSETTING=Flashers,109,Flashers Enabled,On,Y,110,100\nSETTING=Addressable,113,Addressable LEDs Enabled,Off,Y,114,100\n</code></pre> <p>Note</p> <p>The line LINK_BUT_CN=1016,MONO,36,0000,MONO,35 has a button LED output defined as \u201c0000\u201d, this is used where the button has no illumination but needs to be defined for its input code.\u00a0 In my case, I am using my Start button (BUT_ST) as and additional coin button.\u00a0 As such, I want to monitor the input against the Coin function but only light the button as a Start button.</p>"},{"location":"getting-started/07_MAME.html#front-end","title":"Front End","text":"<p>I\u2019ve chosen to us PinUp Popper for the front end menu system.\u00a0 There were two reasons for this, firstly I\u2019d never set it up before (I have PinballX on my pinball cabinet) and it looked fun, secondly, I needed more video and images displayed by the menu.\u00a0 Quite specifically I need the marquee images displayed on the top screen as you select each game from the menu.</p> <p>I have added the ability for PinUp Popper to work with DOFLinx for menu navigation.\u00a0 This allows any toy to be used without PinUp Popper needing to open and use DOF.\u00a0 There is a separate guide on how to do this.</p> <p>Overall MAME, and most other emulators, is designed to be started from the command line per game.\u00a0 This means that your front end menu system needs to be able to run MAME and any other configuration per game.\u00a0 My setup for MAME in PinUp Popper is shown below:</p> <p></p> <p></p> <p>I also have settings that need to run in DOFLinx when things start and stop.\u00a0 They can be seen below:</p> <p></p> <p></p>"},{"location":"getting-started/07_MAME.html#other-emulators","title":"Other Emulators","text":"<p>While this a guide about getting MAME and force feedback, not all games run through MAME.\u00a0 One of my favourite retro games to tinker with (not play seriously) is the video story game, Dragon\u2019s Lair.\u00a0 This is played via the Daphne emulator.\u00a0 I also have a PlayStation emulator and others will follow.</p> <p>For these games setup of the MX effects and coloured LED buttons is required.\u00a0 To do this I use shortcuts, and batch files (because of the parameter length restrictions of shortcuts), to run DOFLinxMsg.\u00a0 DOFLinxMsg is one way to send messages to DOFLinx changing the configuration and initiating actions.</p> <p>Below are my startup and shutdown scripts used around the Daphne emulator.</p> <p></p> <p>StartDaphne.Bat</p> <pre><code>@echo off\nC:\\DOFLinx\\DOFLinxMsg.exe BUTTON_COLOUR_CHANGE=BUT_ST,Lime,BUT_EX,Black,BUT_RE,Black,BUT_PS,Black,BUT_P1,Black,BUT_P2,Black#LIGHT_BUTTONS_NOW\nC:\\DOFLinx\\DOFLinxMsg.exe FF_ROM=doflinx#FF_DOF=E78,7000#FF_DOF=E123,7000#BUTTON_COLOUR_CHANGE=BUT_ST,Deep_pink,BUT_EX,Forest_Green,BUT_RE,Dark_orange,BUT_PS,Dark_violet,BUT_P1,Dark_turquoise,BUT_P2,Salmon#BUTTONS_LIT=BUT_ST,BUT_EX,BUT_RE,BUT_PS,BUT_P1,BUT_P2#LIGHT_BUTTONS_NOW\n</code></pre> <p>StopDaphne.Bat</p> <pre><code>@echo off\nC:\\DOFLinx\\DOFLinxMsg.exe \"BUTTON_COLOUR_CHANGE=BUT_ST,Lime,BUT_EX,Amber,BUT_RE,Tomato,BUT_PS,Deep_Pink,BUT_P1,Cyan,BUT_P2,Orchid#BUTTONS_LIT=BUT_ST#LIGHT_BUTTONS_NOW\"\n</code></pre> <p></p> <p></p>"},{"location":"getting-started/07_MAME.html#running-games","title":"Running games","text":""},{"location":"getting-started/07_MAME.html#nes","title":"NES","text":"<p>Nintendo Entertainment System (NES) games run within MAME.\u00a0 They run in a specific sub-machine being the NES machine.\u00a0 That means when an NES game is started in MAME it only ever reports the game name of \u201cNES\u201d, not the actual game itself.\u00a0 To apply the correct xxx.MAME file for a NES game the file name must be NES.MAME</p> <p>This little inconvenience is handled by naming the appropriate NES game MAME file to be simply NES.MAME just before starting MAME.\u00a0 Below is my setup.</p> <p></p> <p></p>"},{"location":"getting-started/08_AttractMode.html","title":"Attract Mode","text":"<p>DOFLinx can be setup to \u201cplay\u201d a series of display items in a variety of sequences to create an attract mode display.\u00a0 In addition, Attract Mode can display marquees on your Pixelcade or DMD device.\u00a0 This guide will help explain how to setup and use that function.</p> <p>There are two parts to attract mode, the setup, then the starting and stopping of \u201cplaying\u201d the display.\u00a0 You can load a single attract mode sequence and use it multiple times.\u00a0 You can load a new attract mode sequence at any time.</p> <p>Loading the attract mode sequence is via the ATTRACT_SETUP= parameter.\u00a0 This parameter has a single number as the first item that defines the time unit of measure in mS that each display item will use via its multiplier.\u00a0 The rest of the parameter is a repeating sequence of five items being the display item number, the device/port, the colour (or on/off for mono devices), multiplier of the time unit, then finally the next item number to \u201cplay\u201d.</p> <p>If you have RGB outputs on output device #1 using port #1 and port #4 they would be defined as 1001 and 1004.\u00a0 To make an attract mode that plays red \u2013 blue repeating at 1 second intervals you would set the delay to 1000mS = 1 second, then two display item groups being display item group 1 on device/port 1001 for Red followed by display item group 2 on device/port 1004 for Blue.\u00a0 In a simple table it looks like;</p> Display Item #1 Display Item #2 ID Number 1 2 Device 1001 1004 Colour Red Blue Time Multiplier 1 1 Next ID Number 2 1 <p>The parameter would then be</p> <p>ATTRACT_SETUP=1000,1,1001,Red,1,2,2,1004,Blue,1,1</p> <p>If you wanted the above RGB outputs to go off in between, so flip-flop between red and blue you need a sequence of Red \u2013 Off \u2013 Blue \u2013 Off repeating with the off items running in parallel to the on items.\u00a0 This would look like;</p> Display Item #1 Display Item #2 Display Item #3 Display Item #4 ID Number 1 1 2 2 Device 1001 1004 1004 1001 Colour Red Black Blue Black Time Multiplier 1 0 1 0 Next ID Number 2 0 1 0 <p>The parameter would then be</p> <p>ATTRACT_SETUP=1000,1,1001,Red,1,2,1,1004,Black,0,0,2,1004,Blue,1,1,2,1001,Black,0,0</p> <p>Once loaded the attract mode sequence is started or stopped by using ATTRACT_MODE=1 or ATTRACT_MODE=0 respectively.</p> <p>Attract mode sequences are very flexible.\u00a0 There are a number of basic sequence types that can be setup.\u00a0 They can be combined to form more complex sequences.</p> <p>Sequential</p> <p>To play at increasing increments and cycle</p> <p>A-&gt; B -&gt; C -&gt;D -&gt; E -&gt; A</p> A B C D E ID Number 1 2 3 4 5 Device 1001 1004 1007 1010 1013 Colour Orange Pink Green Yellow Blue Unit 1 2 4 8 16 Next ID Item 2 3 4 5 1 <p>Note that the last item in the sequence has the ID Number of the first item to play next, hence a loop.</p> <p>Parallel</p> <p>To play at equal increments and cycle</p> <p>A -&gt; B -&gt; C -&gt; A</p> <p>D -&gt; E -&gt; F -&gt; D</p> A B C D E F ID Number 1 2 3 1 2 3 Device 1001 1004 1007 1010 1013 1016 Colour Blue Orange Red Blue Orange Red Unit 1 1 1 1 1 1 Next ID Item 2 3 1 0 0 0 <p>Note the second parallel set does not have Next Id Item\u2019s set as the first set will drive the changes.</p> <p>Sequential and Parallel</p> <p>To play at equal intervals and cycle</p> <p>C -&gt; D</p> <p>A -&gt; B -&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 -&gt; A</p> <p>E -&gt; F</p> A B C D E F ID Number 1 2 3 4 3 4 Device 1001 1004 1007 1010 1013 1016 Colour Random Random Red Blue Red Blue Unit 1 1 1 1 1 1 Next ID Item 2 3 4 1 0 0 <p>To make it easier to read the INI file you can split the ATTRACT_SETUP= line using a semicolon to indicate that there is more to come on the next line.\u00a0 For example:</p> <p>ATTRACT_SETUP=1000,;</p> <p>1,1001,Red,1,2,;</p> <p>1,1004,Black,0,0,;</p> <p>2,1004,Blue,1,1,;</p> <p>2,1001,Black,0,0</p> <p>In addition, the ATTACT_SETUP= line can be made even more legible by using device names instead of device / output (DOOO) identification.\u00a0 For example:</p> <p>ATTRACT_SETUP=1000,;</p> <p>1,BUT_B1,Red,1,2,;</p> <p>1,BUT_B2,Black,0,0,;</p> <p>2,BUT_B2,Blue,1,1,;</p> <p>2,BUT_B1,Black,0,0</p> <p>Attract Mode can be started in one of two ways:</p> <p>1.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Set the ATRACT_START_DELAY=X where X is the number of milliseconds of inactivity, ie ATTRACT_START_DELAY=60000 to auto start after 1 minute</p> <p>2.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Send the ATTRACT_MODE=1 message via any method you like, ie via DOFLinxMsg.exe</p> <p>Attract Mode will stop when either:</p> <p>1. A Game is started, a menu navigation message is received, you are in debug mode and use the right-click menu.</p> <p>2. The ATTRACT_MODE=0 message is sent to DOFLinx</p>"},{"location":"getting-started/09_PinUpPopper.html","title":"Pinup Popper","text":"<p>If you are using Pinup Popper for your arcade menu along with DOFLinx on your arcade machine, then you can have Popper send details of the current game select so that DOFLinx can update things like a Pixelcade or DMD supported by FlexDMD via DOF2DMD for marquees and high scores.</p> <p>In addition you can setup to perform any of the DOFLinx actions (solenoids, SSF, Flashers, addressable LEDs, etc) for Next, Prior, Next Page, Prior Page navigation.</p> <p></p> <p>Here is the game name and high scores being displayed on the built in DOFLinx score screen.\u00a0 If you have a Pixelcade device or DMD using FlexDMD it will display the marquee and optionally high scores dependant on the parameters you setup in your DOFLinx.ini\u00a0 If you have a DMD screen using FlexDMD then you will need the DOF2DMD utility available here https://github.com/DMDTools/DOF2DMD/releases</p> <p>To do this you will need to edit two of your Pinup Popper files.\u00a0 I have included copies of my files in the \u201c\\DOFLinx\\PinUp Popper\u201d folder within the installation zip.\u00a0 They are PUPMenuScriptSysOptions.ini and PuPMenuScript.pup .\u00a0 Ensure you make a backup of both files before starting to edit just in case the edits don\u2019t go according to plan.</p> <p>The change to\u00a0 PUPMenuScriptSysOptions.ini is to add the highlighted line in approximately the area shown below:</p> <p>useDOF = false ;\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // set to true if using DOF output with Popper. false = disabled</p> <p>useDMD = false ;\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // set to true if using hardware dmddevice.DLL, for real DMDs. false = disabled</p> <p>useWEB = false ;\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // set to true if using WebServer for Remote control of Popper. false = disabled</p> <p>useDOFLinx = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set to true if using DOFLinx to show marquees for MAME</p> <p>NoBracketText = 0 ;\u00a0\u00a0\u00a0\u00a0\u00a0 // set to 1 to NOT display any text within brackets for the Game's \"Screen Name\"</p> <p>The second file requiring editing is PuPMenuScript.pup . You will need to add three small sections that are highlighted.\u00a0 I recommend using cut and paste from this document as case and spacing is important.\u00a0 I\u2019ve left sections one either side of the highlighted piece you require below to help with determining where to add the code.</p> <p>First addition</p> <pre><code>/////////////////////////////////// END WEB Remote STUFFS ////////////////////////////////////////////////\n//////////////////////////////////// DOFLinx STUFF ///////////////////////////////////////\n\nfunction ProcessDOFLinx(gtype, rom){\nif (useDOFLinx) {\ntry {\n      msg = 'MENU_ROM=';\n      msg = msg.concat(gtype, ',', rom);\n      var DOFLinxObject = new ActiveXObject(\"Scripting.FileSystemObject\");\n      DOFLinx_Pipe = DOFLinxObject.CreateTextFile(\"\\\\\\\\.\\\\pipe\\\\DOFLinx\", false);\n      DOFLinx_Pipe.WriteLine( msg );\n      DOFLinxPipe.Close();\n      DOFLinxObject.Finish();\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      } catch(e) {}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n    }\n  }\n\nfunction NavigationDOFLinx(direction){\n  if (useDOFLinx) {\n    try {\n      if (direction==1 || direction==2 || direction==5 || direction==6) {\n        msg = 'MENU_NAVIGATION=';\n        if (direction==2) {msg = msg.concat('NEXT');}\n        else if (direction==1) {msg = msg.concat('PRIOR');}\n        else if (direction==5) {msg = msg.concat('NEXTPAGE');}\n        else if (direction==6) {msg = msg.concat('PRIORPAGE');}\u00a0\n        var DOFLinxObject = new ActiveXObject(\"Scripting.FileSystemObject\");\n        DOFLinx_Pipe = DOFLinxObject.CreateTextFile(\"\\\\\\\\.\\\\pipe\\\\DOFLinx\", false);\n        DOFLinx_Pipe.WriteLine( msg );\n        DOFLinxPipe.Close();\n        DOFLinxObject.Finish();\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      }\n    } catch(e) {}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n  }\n//////////////////////////////////// DOFLinx END ////////////////////////////////////////////////**\n\nfunction StartUp() {\u00a0\u00a0 //startup menusystem\n  Setuplabels();\u00a0\n  DOFStart();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n  DMDStart();\n  WEBStart();\n}\n</code></pre> <p>Second addition</p> <pre><code>if (useDMD &amp;&amp; DMDStatus) { ProcessDMD(js);}\nif (useWEB &amp;&amp; WEBStatus) {PuPWebServer.MenuUpdate(pMsg);}\nif (useDOFLinx) {\n  ProcessDOFLinx(jsDetails.GameType.toString(),jsDetails.ROM.toString());\n  }\u00a0\u00a0\u00a0\n}\n\nfunction GameLaunch(pMsg) {\u00a0 \u00a0\u00a0\u00a0\u00a0\ntry {\n</code></pre> <p>Third addition</p> <pre><code>function MenuEvent(fIndex){\n//sample dof\n  if (fIndex==2) {PuPlayer.PuPSound('fx_flipperup.wav',100,1,-100,100,'');}\n  else if (fIndex==1) {PuPlayer.PuPSound('fx_flipperup.wav',-100,1,-100,100,'');}\n  else if (fIndex==5) {PuPlayer.PuPSound('fx_bumper.wav',100,1,0,100,'');}\n  else if (fIndex==6) {PuPlayer.PuPSound('fx_bumper.wav',-100,1,0,100,'');}\u00a0\u00a0\u00a0\n  ClearText(); /// Clear all Text for a clean display on each Menu event\n  if (useDOF &amp;&amp; DOFStatus) {\n    try {\n      eNum = 799 + fIndex;\n      eMsg=\"E\" + eNum.toString();\n      DOFObject.UpdateNamedTableElement(eMsg,1);\n      DOFObject.UpdateNamedTableElement(eMsg,0);\n      } catch(e) {}\n    }\n  if (useWEB &amp;&amp; WEBStatus) {PuPWebServer.MenuEvent(fIndex,'');}\u00a0\u00a0\u00a0\n  if (useDOFLinx) {\n    NavigationDOFLinx(fIndex);\n  }\u00a0\u00a0\u00a0\n}\n</code></pre> <p>To make this work you also need the correct data setup for each game.\u00a0 Specifically, you need the ROM set to the MAME ROM name and the Game Type set to \u201cMAME\u201d.\u00a0 Let me explain my setup with screen shots and a few comments below.</p> <p>Just in case you need them, the first two screens shots is my emulator setup in Popper.</p> <p></p> <p></p> <p>Of course you will need to have a Game Type of \u201cMAME\u201d setup as per below.\u00a0 Note, you may have other Game Types as well.</p> <p></p> <p>There are two ways to setup your games.\u00a0 The first is to go through Game Manager and edit each game to have the Game Type and ROM as per below.</p> <p></p> <p>The second way is to run an SQL command to do a bulk update as per the screen shots below.\u00a0 A couple of things about this, while I\u2019ve already said take backups before changing stuff, definitely use the Backup Database function within Popper before editing the database \u2026. It\u2019s your only path back if it gets screwed up.\u00a0 Secondly, the update statement I\u2019ve used and is shown below assumes that all games in the database are MAME, ie a dedicated MAME menu, if you other game types, ie Pinball FX, etc, then you will need to add some sort of conditional part to the update statement.</p> <p></p> <p></p> <p>Also ensure you have a Menu.INI file in the same folder as DOFLinx.EXE .\u00a0\u00a0 There is a default file supplied in the installation zip.\u00a0 This file contains the actions to execute for the various navigations.</p>"},{"location":"getting-started/13_Starting_it_up.html","title":"Starting it up","text":"<p>DOFLinx can be run is two ways:</p>"},{"location":"getting-started/13_Starting_it_up.html#set-and-forget-recommended","title":"Set and Forget (Recommended)","text":"<p>This is where DOFLinx runs all the time in the background and simple \"wakes up\" when it sees a process that is configured to run with. By default, that process is 'Pinball FX2'. DOFLinx uses SFA resources and can comfortably \"sleep\" while you run VP or FP, etc. To use in this mode, simply add a shortcut to the program into your Windows start up folder.</p> <p>This is the mode I designed to utility to work in, and the one I strongly recommend using.</p>"},{"location":"getting-started/13_Starting_it_up.html#launch-before","title":"Launch Before","text":"<p>In this mode you start the DOFLinx program as a 'Launch Before' application from your menu system (ie PinballX). You must then stop the DOFLinx process via a 'Run After' script as well. The best way to stop DOFLinx is to send it a message using the DOFLinxMsg utility or something like a VBS script. Killing the process itself is always a bit ugly.</p> <p>Both modes have merit, it really comes down to how you want to run things on your cabinet. Here are a few comparisons.</p> Set and Forget Launch Before One setup, as designed and tested The process is not running when you use other programs No need to start and stop processes Can use different colour sets for Pinball FX2 / 3 Ability to use attract mode No timing hassles that can occur when you stop and start DOFLinx Needed to show MAME marquees from the menu on Pixelcade or DMD via DOF2DMD <p>Regardless of the mode, you may want to consider the mix of programs you have running that are trying to control your devices. Too many things trying to control your output board may cause you and your PC some confusion.</p>"},{"location":"getting-started/14_Upgrading.html","title":"Upgrading","text":"<ol> <li> <p>Save a copy of your DOFLinx.INI file</p> </li> <li> <p>As per installation, just unpack the new EXE file over the top of the old one.  Of course, you might need to stop the DOFLinx process if you have it running at all times as a set and forget.</p> </li> <li> <p>Replace your DOFLinx.INI file</p> </li> </ol> <p>Notes</p> <p>a)  From Version 2.0 all lists in the INI that were space separated are now comma separated.  This means all lists are comma separated.  Space separated lists no longer work from version 7.0</p> <p>b)  At installation or upgrade, you may need to \u201cunblock\u201d the EXE file if you are using Windows 10.  Just right click, properties, and unblock.</p> <p>c)  From version 7.0 there is no need to run with administrator rights unless you run any of your pinball emulators with administrator rights.</p> <p>d)  From version 8.12 the installation structure recommended changed for pinball users from collocating with your DirectOutput installation to a separate \\DOFLinx folder.  This coincides with the change in DirectOutput to having an installation where 32 and 64 bit versions of DOF can coexist better.</p>"},{"location":"getting-started/15_32_or_64_Bit.html","title":"32 or 64 Bit","text":"<p>The default installation of DOFLinx above is 64 bit.  You must change this to 32 bit only if you have a 32 bit operating system.  If you are unsure run DOFLinxConfig and check in the bottom right-hand corner (see image above), it will tell you.</p> <p>Others may choose to change to a 32 bit installation, that too is fine.  DOFLinx 32 bit and 64 bit have identical operation, 64 bit just has access to more memory and is arguable marginally faster.</p> <p>For those still running some 32 bit pinball tools, please note that your DOFLinx installation does not need to match those.  Provided DOFLinx has access to the correct bit sized DirectOutput.dll then it can operate as 64 bit while you run other pinball utilities, even those using DOF, as 32 bit.</p> <p>To change to 32 bit just copy the contents of \\DOFLinx\\32 bit into \\DOFLinx.  To go back to 64 bit do the reverse and copy the contents of \\DOFLinx\\64 bit to \\DOFLinx.  If you are unsure if you have it right then run DOFLinxConfig to check.  A mixture of 32 and 64 bit will cause some issues.</p>"},{"location":"overview/05_Videos.html","title":"05 Videos","text":"<p>Videos</p>"},{"location":"parameters/09_Command_Line_Options.html","title":"Command Line Options","text":"<p>There are a few optional command line options for DOFLinx. They are:</p>"},{"location":"parameters/09_Command_Line_Options.html#disabledofyes","title":"DISABLEDOF=YES","text":"<p>This parameter set to YES will disable the search and startup of DOF based controllers. It is used for people running DOFLinx on desktop and VR configurations where there are no DOF based toys being run but you do want B2S backglasses with FX2/3 or you want Xbox rumble output.</p>"},{"location":"parameters/09_Command_Line_Options.html#dof2dmdno","title":"DOF2DMD=NO","text":"<p>Used to stop the automatic startup of DOF2DMD when DOFLinx starts. Use this if you have a cabinet and front end that runs both pinball using your DMD and MAME all together. Not required on a MAME or pinball only cabinet. You shouldn't run this command line argument until after you are sure everything is setup correctly as some of the more informative DOF2DMD startup messages from DOFLinx will be suppressed.</p>"},{"location":"parameters/09_Command_Line_Options.html#dudescabno","title":"DUDESCAB=NO","text":"<p>Add this parameter if you do not want DOFLinx to search for a Dude's Cab controller.</p>"},{"location":"parameters/09_Command_Line_Options.html#ftdino","title":"FTDI=NO","text":"<p>Add this parameter if you do not want DOFLinx to search for any FTDI (SainSmart devices). This parameter is intended for those people with other non-Pinball based FTDI chip based devices connected, ie Fan-o-Matic Pro. If DOFLinx detects a FTDI controlled device that is not a SainSmart relay board, because FTDI devices can only have one program controlling them, there is a remote risk of conflict, hence the ability to switch this test off.</p>"},{"location":"parameters/09_Command_Line_Options.html#game_name","title":"GAME_NAME=","text":"<p>This option is technically valid in both modes, but realistically only useful in Launch Before mode. For Set and Forget mode you can message a GAME_NAME to the running process.</p> <p>Adding this parameter to the command line allows you to force the Game Name for the GAME_COLOUR parameter palette selections. Read about the GAME_COLOUR parameter below.</p>"},{"location":"parameters/09_Command_Line_Options.html#path_dof","title":"PATH_DOF=","text":"<p>If for some reason you need to force the path to where the appropriate DirectOutput.dll resides.  In normal operation this should not be required.</p>"},{"location":"parameters/09_Command_Line_Options.html#path_ini","title":"PATH_INI=","text":"<p>The path to locate INI files in. This value can be set as a command line argument, via a real-time command or in an INI file. Obviously if you wish to locate your <code>DOFLinx.INI</code> in this path then you must use the command line to set this value.</p> <p>The path can be absolute, ie <code>C:\\DOFLinx\\INI\\</code> or relative from the location where the program executes from, ie if the program is in <code>C:\\DirectOutput</code> and you have a DOFLinx_INI folder below that the value can be <code>DOFLinx_INI\\</code></p>"},{"location":"parameters/09_Command_Line_Options.html#pinoneno","title":"PINONE=NO","text":"<p>Add this parameter if you do not want DOFLinx to search for a PinOne controller.</p>"},{"location":"parameters/09_Command_Line_Options.html#pinscapeno","title":"PINSCAPE=NO","text":"<p>Add this parameter if you do not want DOFLinx to search for a Pinscape controller (native Pinscape, not a Pinscape in LEDWiz emulation mode). This parameter is really intended for people running DOFLinx from V5.0 onward who have the DOF Framework branch that does not have Pinscape support. Regardless of having a Pinscape device or not, if you do not have a DOF Framework version that supports Pinscape you need this setting or you will get a .NET framework error.</p>"},{"location":"parameters/09_Command_Line_Options.html#sup_ini","title":"SUP_INI=","text":"<p>This option is valid in both modes, but realistically only useful in Launch Before mode as command line option. For Set and Forget mode you can message a SUP_INI file to the running process.</p> <p>To enable game specific settings you can place common parameters (see below for parameter descriptions) in the default <code>DOFLinx.INI</code> file and other in XXX.INI. You then supply DOFLinx with that supplementary INI file via this command line option. Ie DOFLinx SUP_INI=MyGame where MyGame.ini contains your game specific key and colour information.</p> <p>If you want to keep things neat and tidy you can create a sub-folder under your DOF folder for INI files. If you do this just add a path name to the SUP_INI= parameter. If your folder is MyINIs, then SUP_INI=\"MyINIs\\TheINI\". The path is relative to where you start the program from, being the DOF folder.</p> <p>Note</p> <p>Don't add the \".ini\" to the end of the name.</p>"},{"location":"parameters/10_The_Parameter_Files.html","title":"The Parameter Files","text":"<p>By default, all parameters are in the <code>DOFLinx.INI</code> file. Many parameters have a default, so may not be required. Check each parameter in the section below.</p> <p>When using DOFLinx in a Launch Before setup you may want different keys to do different things for a different emulator or even at the table level. To do this, place the parameters you don't want to change in DOFLinx.INI and the ones you want to change in XYZ.INI where XYZ is any valid file name.</p> <p>Some parameters can be overridden by redefining them in your SUP_INI file, others cannot. Honestly, I haven't tested them all. The design is for them to appear once only. If you want to try overriding, feel free to give it a go, I have done so for KEY_TO_RGB and it works like a treat.</p> <p>Note: If you're running DOFLinx as Set and Forget, and edit your DOFLinx.INI file, you will need to restart the DOFLinx process. This can be done by simply rebooting, or kill it off in Task Manager and restart it by double clicking on it. Remember, unless you are in debug mode you will not see a window pop up in front of you, so avoid trying to start it twice!</p>"},{"location":"parameters/11_The_Parameters.html","title":"The Parameters","text":""},{"location":"parameters/11_The_Parameters.html#device-port","title":"Device / Port","text":"<p>A device / port setting is used by many of the parameters. It is always in the form <code>DOOO</code>, where <code>D=</code> the device number as assigned by DOFLinx (if in doubt run in debug and read what it is). They start at 1 and go up from there. So if you've only got one SainSmart, LedWiz, etc then it is almost certainly 1. The <code>OOO=</code> is the output port number. This can be from 1 up to the maximum supported by your device, ie LedWiz its 32.</p> <p>So <code>DOOO</code> as</p> <ul> <li>1009 is device 1, output port 9,</li> <li>2027 is device number 2, port 27,</li> <li>1120 is device 1, output port 120.</li> </ul> <p>Prior to V7.23 the format was <code>DOO</code> as opposed to the current <code>DOOO</code>. This change was made to accommodate output ports &gt;=100. Both <code>DOO</code> and <code>DOOO</code> formats are currently supported.</p> <p>Note</p> <p>A LedWiz or KL25Z device can have an ID number that is different to the device number assigned by DOFLinx. For example, ID #8 may initialise as device #2. So the second device that comes with a KL25Z has the ID of 8 and will be normally be addressed as 2001 to 2032.  (note this may vary based on how many devices you have and how they are setup). If in doubt look at the <code>DOFLinx.LOG</code> file, the device ID's and numbers are always in there from start-up regardless of the <code>DEBUG=</code> flag.</p>"},{"location":"parameters/11_The_Parameters.html#key-numbers","title":"Key numbers","text":"<p>Key numbers, represented by in the commands below, can be either keyboard codes or Xbox keys.</p>"},{"location":"parameters/11_The_Parameters.html#keyboard","title":"Keyboard","text":"<p>This is the key scan code to monitor, shown as KK. Codes can be found here.</p> <p>So, for the left shift key KK is A0 (A zero), and right control key KK is A3.</p>"},{"location":"parameters/11_The_Parameters.html#xbox-controller","title":"Xbox Controller","text":"<p>The code to indicate an Xbox key has three parts;</p> <ol> <li>\"X\" to indicate Xbox</li> <li><code>#</code> is the controller number from 1 to 4</li> <li>CC the 1 or 2 digit code for the button</li> </ol> <p>So \"X1A\" (no quotes in the INI file) is Xbox controller #1 \"A\" button. Valid button codes are;</p> <pre><code>DU -- Dpad Up\nDD -- Dpad Down\nDL -- Dpad Left\nDR -- Dpad Right\nST -- Start\nBK -- Back\nLT -- Left Thumb\nRT -- Right Thumb\nLS -- Left Shoulder\nRS -- Right Shoulder\nA -- A button\nB -- B button\nX -- X button\nY -- Y button\n</code></pre>"},{"location":"parameters/11_The_Parameters.html#joy-stick-controller","title":"Joy Stick Controller","text":"<p>The code to indicate a joystick has three parts;</p> <ol> <li>\"J\" to indicate a joystick</li> <li><code>##</code> is the joystick number from 1 to 16</li> <li>CC is the DPAD button or button number</li> </ol> <p>So \"J01DD\" (no quotes in INI file) is joystick #1 DPAD Down button, and \"J0204\" is joystick #2, button number #4.</p> <pre><code>DU -- Dpad Up\nDD -- Dpad Down\nDL -- Dpad Left\nDR -- Dpad Right\nXX -- is the joystick button number from 1 to 32 with leading zeros up to and including 9, ie 01,02, etc.\n</code></pre>"},{"location":"parameters/11_The_Parameters.html#attract_marquee_timex","title":"<code>ATTRACT_MARQUEE_TIME=X</code>","text":"<p>Sets the time in milliseconds that marquees will display when Attract Mode is running. To not display marquees when in Attract Mode set this parameter to 0 or just leave it out of your INI file. Do not set this parameter to less than 1000 (1 second) as you will flood the device trying to display the marquee.</p>"},{"location":"parameters/11_The_Parameters.html#attract_mode01","title":"<code>ATTRACT_MODE=[0/1]</code>","text":"<p>Manually turn attract mode on or off. On is 1 and off is 0, so turning attract mode on is ATTRACT_MODE=1</p>"},{"location":"parameters/11_The_Parameters.html#attract_setupdddndoooccccuxndoooccccux","title":"<code>ATTRACT_SETUP=DDD,N,DOOO,CCCC,U,X[,N,DOOO,CCCC,U,X]</code>","text":"<p>Load up an attract mode sequence, <code>DDD</code> is the unit of delay in milliseconds between 100 and 10000 inclusive, so 1000 sets a unit of delay of 1 second.</p> <p>The next section of five items is repeated as many times as you want.</p> <p>N is the item number of the current display item. You must have at least one display item numbered 1.</p> <p>DOOO is the device / output to act on.</p> <p>CCCC is the colour to display. RANDOM is valid for a RGB device, ON / OFF is used for mono devices.</p> <p>U is the number of units to delay. So if U = 3, and DDD=500, then this item will be displayed for 1500mS or 1.5 seconds. Set this to 0 if the action is to happen immediately, ie turning off the last displayed colour to create a chain effect.</p> <p>X is the next item to display. For a loop make the last display item 1 to start from the beginning again.</p>"},{"location":"parameters/11_The_Parameters.html#attract_start_delayx","title":"<code>ATTRACT_START_DELAY=X</code>","text":"<p>Set this to a value above zero to be the number of milliseconds of inactivity until DOFLinx starts your Attract Mode activities. If you are not using Attract Mode simply leave this parameter out of your INI file.  For most something like ATTRACT_START_DELAY=30000 is a good setting, this means after 30 seconds attract mode actions start.  If you have attract mode in your front end menu as well, then make these timeout values align.</p> <p>Inactivity is defined as, not having an emulator that DOFLinx monitors, time since the last menu system navigation message was received, time since the right-click menu was activated.</p>"},{"location":"parameters/11_The_Parameters.html#auto_mx01","title":"<code>AUTO_MX=[0|1}</code>","text":"<p>Default is 0, can be left out of INI file. 0=off, 1=on.</p> <p>Setting this parameter on (1) will make DOFLinx use some basic default MX displays for Pinball FX2, Pinball FX3 and Future Pinball DOFLinx tables that are not explicitly coded to trigger MX commands. It will use default MX displays for the five flashers, flippers, slingshots, bumpers, strobe and beacon.</p> <p>If a Pinball FX2, Pinball FX3 or Future Pinball table has been coded with MX commands then this parameter will have no effect for that table and the coded commands will be used.</p>"},{"location":"parameters/11_The_Parameters.html#button_colour_changennnnnccccnnnnncccc","title":"<code>BUTTON_COLOUR_CHANGE=NNNNN,CCCC[,NNNNN,CCCC]</code>","text":"<p>An option list of button name and colour pairs to change the colour of a button set via LINK_xx buttons. This is used to change the set colour of a button after its been defined using LINK_xx.</p> <p>So if in <code>DOFLinx.INI</code> you setup the Start button to be green using LINK_ST=101,Green then find that in a particular game you want the Start button to be blue use BUTTON_CHANGE_COLOUR=BUT_ST,Blue</p> <p>While logically not required in DOFLinx.INI, if set in the DOFLinx.INI file buttons must be defined before they can be used. So, you must set LINK_P1= and LINK_CN= higher in your DOFLinx.INI file before using a command like above.</p>"},{"location":"parameters/11_The_Parameters.html#button_light_actionbbbaaaontcbbbaaaontc","title":"<code>BUTTON_LIGHT_ACTION=BBB,AAA,O,N,T,C[,BBB,AAA,O,N,T,C]</code>","text":"<p>This parameter is most likely used in a game file, ie FX3 file. It links a table trigger to a button LED action. The Button LED can be RGB or MONO.</p> <p>BBB is the button identifier, ie BUT_LF for left flipper.</p> <p>AAA is the action from the table, common actions for FX3 are LeftFlipper, RightFlipper, Slingshot_Left, Bumper_01,NudgeLeft, etc.</p> <p>O defines if this action links to the ON or OFF of the action, so LeftFlipper,ON will trigger when the left flipper activates.</p> <p>N is the action to take, valid codes for button LEDs are 1,2,3,6,7, where:</p> <ul> <li>1 = on</li> <li>2 = off</li> <li>3 = on for X milliseconds</li> <li>6 = off for X milliseconds</li> <li>7 = show alternate colour for X milliseconds</li> </ul> <p>T = time in milliseconds for the action</p> <p>C = alternate colour if action #7 is used. For other actions just ensure there is a valid colour there, ie Black</p> <p>So <code>BUTTON_LIGHT_ACTION=BUT_LF,LeftFlipper,ON,2,0,Black,BUT_LF,LeftFlipper,OFF,1,0,Black</code> means that the left flipper button LED is turned off when the flipper turns on, then the second action turns on the left flipper button LED when the left flipper turns off. The effect is that the button is normally lit, then turns off as you hold in the flipper button, then turns back on when you release the button.</p>"},{"location":"parameters/11_The_Parameters.html#buttons_litnnnnnnnnnn","title":"<code>BUTTONS_LIT=NNNNN[,NNNNN]</code>","text":""},{"location":"parameters/11_The_Parameters.html#button_lit_addednnnnnnnnnn","title":"<code>BUTTON_LIT_ADDED=NNNNN[,NNNNN]</code>","text":"<p>An optional list of buttons to light when DOFLinx activates due to a PROCESS being detected. NNNNN is in the form of BUT_P1 for player 1, etc. So lighting Player 1 and the coin button will require BUTTONS_LIT=BUT_CN, BUT_P1</p> <p>BUTTONS_LIT clears the list of buttons to light then adds the buttons provided whereas BTTONS_LIT_ADDED adds buttons to the existing list. Beware of your logic when adding buttons to ensure you don't keep adding the same buttons over and over as games start / stop.</p> <p>If set in the <code>DOFLinx.INI</code> file buttons must be defined before they can be used. So you must set LINK_P1= and LINK_CN= before using the above sample command.</p>"},{"location":"parameters/11_The_Parameters.html#close_devices_betwen_active01","title":"<code>CLOSE_DEVICES_BETWEN_ACTIVE=[0|1]</code>","text":"<p>Default is 0, can be left out of INI file, 0=off, 1=on</p> <p>Don't set this to \"1\" (on) unless advised to do so. It will force the closing of devices between periods of activity. A very similar mode of operation occurs when a SainSmart device is detected since FTDI drivers only allow for one program to control the device at any point in time, hence DOFLinx releases the device when at all possible.</p>"},{"location":"parameters/11_The_Parameters.html#colour_paletteccccccccccccccc-etc","title":"<code>COLOUR_PALETTE=CCCCC,CCCCC,CCCCC, etc</code>","text":"<p>Not required, default is to use the full colour palette in the DIRECTOUTPUTCONFIG file.</p> <p>This parameter allows you to set the current colour palette used by the RGB devices (RGB_OUTPUT). For example, if you want to restrict to greens and yellows then</p> <p><code>\"COLOUR_PALETTE=Lime,Green,Yellow,Gold,Lawn_Green,Chart_Reuse,Green_Yellow,Forect_Green,Dark_Green,Yellow_Green,Light_Green\"</code></p> <p>would do it.</p> <p>This is intended for use in the STARTUP section of *.MAME and *.FX files to set the colour palette to a restricted set of colours for the MAME game being run. It is possible to use the GAME_COLOUR= command and add all MAME games to your <code>DOFLinx.INI</code> file and have them selected by game name. The problem with that is the list will become super long and you have to maintain two configuration areas.</p>"},{"location":"parameters/11_The_Parameters.html#close_roms01","title":"<code>CLOSE_ROMS=0/1</code>","text":"<p>Not required in the INI file, default is 1</p> <p>The default is for DOFLinx to close DOF ROMs between uses. This ensures that other software can use DOF unhindered. This was the default action until v7.16 when this option was introduced. For pinball cabinets leaving this as default makes sense as most front ends are setup on pinball cabinets now to use DOF for menu effects and each table uses a different ROM.</p> <p>For an arcade machine the setup can be quite different. At the time of writing, all MAME files (300+) use the doflinx ROM for MX effects. By not closing the ROM each time the transition between games can be sped up by 5-10 seconds each time (the amount of time it takes DOF to load a larger ROM). It also allows for the ROM to remain open (you can explicitly do this in other ways) outside of when the emulator is running. Having the ROM active allows many other effects and button setups to continue unhindered.</p> <p>If the parameter is set to leave the ROM open it will still close when DOFLinx exits, is explicitly told to close the ROM by using the FF_ROM=\"\" command, or when a new ROM is requested that doesn't match the one currently loaded.</p>"},{"location":"parameters/11_The_Parameters.html#debug-012","title":"<code>DEBUG= [ 0|1|2]</code>","text":"<p>Default is 0, can be left out of INI file. 0=off, 1=on showing DOFLinx window, 2=on not showing DOFLinx window.</p> <p>Setting DEBUG on optionally makes the DOFLinx window visible and always creates the DOFLinx.LOG file. It makes all messages visible in the window for =1. The same messages are written to the DOFLinx.LOG file for =1 and =2.</p> <p>Other than logging and the window being visible, nothing is different between having debug on or off. Of course, you wouldn't want debug on during normal use as it will leave the window visible, create a very big log file and log file writes are a slow thing to do so may cause delay / stuttering.</p> <p>DOFLinx logs the first few start-up actions every time regardless of this parameter. The reason, well it hasn't read the flag yet, so key start-up info is sent to the log just in case.</p> <p>The DOFLinx.LOG file can be safely deleted at any time.</p>"},{"location":"parameters/11_The_Parameters.html#debug_tcp_portpppp","title":"<code>DEBUG_TCP_PORT=pppp</code>","text":"<p>No default, not required</p> <p>When the DEBUG parameter is set to anything other than 0 messages are added to DOFLinx.LOG. If the DEBUG_TCP_PORT= is set to a valid TCP port, for example DEBUG_TCP_PORT=8001 then the messages sent to DOFLinx.LOG are mirrored as an output on this TCP port. So once DEBUG_TCP_PORT is set, messages can be monitored using a TCP port reading utility such as NC. A utility that handles DOFLinx messages, TCPReader, is included with the DOFLinx distribution.</p> <p>DEBUG_TCP_PORT= can be both a <code>DOFLinx.INI</code> parameter or a command line parameter in your shortcut to run DOFLinx. Setting this parameter via the command line will ensure all messages from the very beginning are logged.</p> <p>With DEBUG=2 and DEBUG_TCP_PORT=8001 DOFLinx will log all messages to both the DOFLinx.LOG file and mirrored as output on TCP port 8001. With this configuration DOFLinx will not be displayed on your cabinet screen and logging can be monitored in real time.</p>"},{"location":"parameters/11_The_Parameters.html#delay_between_key_press","title":"<code>DELAY_BETWEEN_KEY_PRESS=</code>","text":"<p>Default is 500, can be left out of ini file.</p> <p>This is the delay in milliseconds between key presses for KEY_TO_COLOUR, KEY_TO_OUTPUT_TIMER, KEY_TO_COLOUR_TIMER commands being triggered. So at its default, 500mS, if a key is detected as pressed again within 500mS the trigger action will not be reinitiated.</p> <p>This delay is required given that DOFLinx is not the program in focus and hence is monitoring the keyboard as opposed to receiving keystrokes. As such, a single quick key press can be detected multiple times without this delay.</p>"},{"location":"parameters/11_The_Parameters.html#directoutputconfigdrvpathffffini-or","title":"<code>DIRECTOUTPUTCONFIG=DRV:\\PATH\\FFFF.INI or</code>","text":""},{"location":"parameters/11_The_Parameters.html#colour_file-drvpathffffini","title":"<code>COLOUR_FILE= DRV:\\PATH\\FFFF.INI</code>","text":"<p>No default, required parameter.</p> <p>This is the full file name, including path, to you directoutputconfig.ini file, ie \"C:\\directoutput\\config\\DirectOutputConfig.ini\" , or \u201cc:\\DOFLinx\\config\\colours.ini\u201d without the quotes. The only reason a pointer to this file exits is to get the DOF colours, so technically it could be any file so long as it has the section from your directoutputconfig.ini file that looks like:</p> <pre><code>[Colors DOF]\nWhite=#FFFFFFFF\nRed=#FF0000FF\nLime=#00FF00FF\n...\n</code></pre> <p>If you do make up a separate colour file and point to that, then you can also add your own custom colours. Just keep them in the same format and use any name you like less than 21 characters. You can then use those custom colours with the likes of GAME_COLOUR or KEY_TO_RGB.</p> <p>If you have multiple DOF devices, then you will have multiple directoutputconfig files. Just find the one with a section that looks like the above and use that (yes I know they spell colour in some strange way, American I think?).</p> <p>IMPORTANT NOTE: This parameter must come before any colours are assigned. To avoid any issues, the easiest thing is to make sure this is the first parameter in the <code>DOFLinx.INI</code> file.</p>"},{"location":"parameters/11_The_Parameters.html#directoutputglobaldrvpathffffini","title":"<code>DIRECTOUTPUTGLOBAL=DRV:\\PATH\\FFFF.INI</code>","text":"<p>No default, optional parameter.</p> <p>Required if you intend to use addressable LEDs.</p> <p>This is the full file name, including path, to your DOF R3 GlobalConfig.xml file, ie \"C:\\directoutput\\config\\GlobalConfig_b2sServer.xml\" without the quotes.</p> <p>You may not have a global config XML file for DOF, if not, do not panic, and do not include this parameter. I ran for years without one. This file got created on my cabinet when I added a Teensy addressable LED controller.</p>"},{"location":"parameters/11_The_Parameters.html#ff_dofccccdddccccddd","title":"<code>FF_DOF=CCCC,DDD[,CCCC,DDD]</code>","text":"<p>An optional parameter, most likely used in a supplementary INI file</p> <p>One or a series of DOF commands to trigger events setup in ROMs vis the DOF.</p> <p>You need to have selected a DOF ROM via FF_ROM= before this command can be used.</p> <p>CCCC is a command to trigger in the DOF directoutputconfigxx.ini file (normally a MX effects command), ie E99</p> <p><code>DDD</code> is the duration. If the duration is set in the DOF directoutputconfigxxx.ini file then this value will be -1 to use the predefined duration. If the event has no duration, ie an effect for MX LEDs when a flipper is down, then the duration is a time in milliseconds for the effect to stay on.</p> <p>A duration (DDD) of 0 (zero) will turn off an effect previously turned on, ie setting a flipper effect on for 10000mS (10 seconds) on flipper down, but wanting the effect to stop on flipper up.</p>"},{"location":"parameters/11_The_Parameters.html#ff_pc-aoddddd","title":"<code>FF_PC A,O,DDDDD</code>","text":"<p>Mainly used in *.MAME and possibly *.FX files.</p> <p>For initiating an action on a Pixelcade device. \"A\" is the action, \"O\" is the output device, \"DDDD\" is the detail.</p> <p>Valid actions:</p> <p>T = Text, D<code>DDD</code> = The text to display. Remember this is in the format used in a URL, to a space is %20</p> <p>U = User command. A native Pixelcade V1 or V2 command as a URL without the host name and no leading / . ie the native command http://pixelcade.local:8080/console/stream/nes becomes FF_PC,U,E,console/stream/nes</p> <p>Valid devices</p> <p>C = LCD</p> <p>E = LED</p>"},{"location":"parameters/11_The_Parameters.html#ff_pup_eventeeevveeev","title":"<code>FF_PUP_EVENT=EEE,VV[,EEE,V]</code>","text":"<p>An optional parameter, most likely used in a supplementary INI file</p> <p>One or a series of PUP events to be triggered. EEE is the event name and V the value passed with that event identifier.</p>"},{"location":"parameters/11_The_Parameters.html#ff_romrrrrr","title":"<code>FF_ROM=RRRRR</code>","text":"<p>An optional parameter, most likely used in a supplementary INI file</p> <p>RRR is the ROM name setup within the DOF Config tool.</p> <p>This is used to set the ROM for KEY_TO_ROM= commands. If the ROM name was \"doflinx\" this command would look like FF_ROM=doflinx</p>"},{"location":"parameters/11_The_Parameters.html#fixed_outputs-dooodooodooo","title":"<code>FIXED_OUTPUTS= DOOO[,DOOO,DOOO]</code>","text":"<p>Replaces the old BUTTONS_ON=DOO[,DOO,DOO]</p> <p>Default is no outputs activated. This can be left out of the INI file.</p> <p>A comma separated list of outputs to turn on when DOFLinx \"wakes up\". This is designed to turn on the LEDs within buttons that can be used within the game being started. It can of course be used to turn on an output for any purpose. The output remains on until DOFLinx goes back to \"sleep\"</p> <p>This command can use DOOO for output device and output port.</p> <p>BUTTONS_ON=1016</p>"},{"location":"parameters/11_The_Parameters.html#fixed_outputs_colour-doooccccdoooccccdooocccc","title":"<code>FIXED_OUTPUTS_COLOUR= DOOO,CCCC[,DOOO,CCCC,DOOO,CCCC]</code>","text":"<p>Replaces the old BUTTONS_ON_COLOUR=DOO,CCCC[,DOO,CCCC,DOO,CCCC] </p> <p>Default is no outputs activated. This can be left out of the INI file.</p> <p>A comma separated list of outputs and colours to turn on when DOFLinx \"wakes up\". This is designed to turn on the RGB LEDs within buttons that can be used within the game being started. It can of course be used to turn on other RGB outputs for any purpose. The output remains on until DOFLinx goes back to \"sleep\"</p> <p>This command can use DOOO for output device and output port.</p> <p>FIXED_OUTPUTS_COLOUR=2018,Blue</p>"},{"location":"parameters/11_The_Parameters.html#fp_attempt_link01","title":"<code>FP_ATTEMPT_LINK=[0|1]</code>","text":"<p>Default is 0, this parameter can be left out of the INI file. 0=off, 1=on</p> <p>If one of your PROCESSES= is \"Future Pinball\" then with this parameter set DOFLinx will try and establish a link with FP for tables that have been appropriately DOF'ed. There is a section below that details how to install the required FP script and DOF a FP table. What can I say, get DOF'ing!</p> <p>If the FP link is activated you will need to setup LINK_xx parameters, see below.</p>"},{"location":"parameters/11_The_Parameters.html#fp_link_wait_time","title":"<code>FP_LINK_WAIT_TIME=</code>","text":"<p>Default is 40000, this parameter can be left out of the INI.</p> <p>This sets the amount of time that DOFLinx will look for a Future Pinball table running DOFLinx code. DOFLinx code can only be recognised once Future Pinball has completely loaded the table and its ready to play, that is the progress bar has finished.</p> <p>Setting this value too high will cause DOFLinx to stop responding (don't worry its still working) and potentially still be waiting once you start playing a non-DOFLinx'ed FP table. It should only be extended if you have a slower PC. To get an idea of what to set this to, time your cabinet from table selection from your front end until ready to play the slowest DOFLinx'ed table you have. Once you know how long that is, add 10 seconds just in case, times the result by 1000 and you have your value.</p> <p>So if your cabinet takes 36 seconds to load a particular DOFLinx'ed table, then add 10 to get 46, times by 1000 to get 46000 and use FP_LINK_WAIT_TIME=46000</p> <p>If you know that your cabinet always loads FP tables within 15 seconds to ready to play, then you could drop this value to 25000. This will allow DOFLinx to stop looking for a table link and move onto checking other methods of operation such as flag files for FP sooner. Probably not worth it, but you could.</p>"},{"location":"parameters/11_The_Parameters.html#force_active01","title":"<code>FORCE_ACTIVE=[0|1]</code>","text":"<p>Default is 0, this parameter can be left out of the INI file. 0=off, 1=on.</p> <p>When set to 1, DOFLinx is awake the entire time its running. It negates the need to check for a PROCESSES process.</p> <p>This is a brute force way to use the utility but can provide ease of use in Launch Before mode for emulators other than Pinball FX2. Use this option with caution, ie get everything else going first, then think about why you want to do this. A better way, rather than using this, is to add the other emulators you want DOFLinx to be active for to your PROCESSES= list and leave this parameter out of your INI or set to 0.</p>"},{"location":"parameters/11_The_Parameters.html#fx_left_nudge_point","title":"<code>FX_LEFT_NUDGE_POINT=</code>","text":""},{"location":"parameters/11_The_Parameters.html#fx_forward_nudge_point","title":"<code>FX_FORWARD_NUDGE_POINT=</code>","text":""},{"location":"parameters/11_The_Parameters.html#fx_right_nudge_point","title":"<code>FX_RIGHT_NUDGE_POINT=</code>","text":"<p>Not required, this parameter can be left out of the INI file, only used with FX3 nudge.</p> <p>The point at which movement of the joystick from the Pinscape accelerometer register as a nudge in the respective direction. Note the nudge point for LEFT will be -ve.</p> <p>Nudge trigger points can be discovered and tested using the \"Test Joy Stick\" function on the right click menu when in DEBUG mode.</p>"},{"location":"parameters/11_The_Parameters.html#fx2_focus","title":"<code>FX2_FOCUS=</code>","text":"<p>Not required, defaults to 1</p> <p>Enabled is 1, disabled is 0. When enabled DOFLinx shifts focus to FX2 every 0.5 seconds for 60 seconds after FX2 starts up. This is to assist with focus sometimes doing odd things as FX starts and then we start an active back glass or other things.</p>"},{"location":"parameters/11_The_Parameters.html#fx2_window_wait_time","title":"<code>FX2_WINDOW_WAIT_TIME=</code>","text":"<p>Not required, defaults to 10000</p> <p>This value in milliseconds can be used to manipulate the length of time that DOFLinx scans for a valid game window after FX2 starts. The default is a timeout of 10 seconds if a valid game window is not found. If you are using the grid rather than a front end like PinballX then you may wish to set the maximum higher, thus giving yourself time to select a game from the grid.</p>"},{"location":"parameters/11_The_Parameters.html#fx3_focus","title":"<code>FX3_FOCUS=</code>","text":"<p>Not required, defaults to 1</p> <p>Enabled is 1, disabled is 0. When enabled DOFLinx shifts focus to FX3 every 0.5 seconds for 60 seconds after FX3 starts up. This is to assist with focus sometimes doing odd things as FX starts and then we start an active backglass or other things.</p>"},{"location":"parameters/11_The_Parameters.html#fx3_trigger_release_delay","title":"<code>FX3_TRIGGER_RELEASE_DELAY</code>","text":"<p>Not required defaults to 0</p> <p>This value in milliseconds determines how long a trigger from FX3 must have changed state (ie turned on or off) until DOFLinx believes it. This was added to allow the control of false off triggering, particularly when holding the flipper on. A value of 50mS should be enough for most situations without causing any noticeable delay.</p>"},{"location":"parameters/11_The_Parameters.html#game_colournnnnccccccccccccccc","title":"<code>GAME_COLOUR=NNNN,CCCCC,CCCCC,CCCCC</code>","text":"<p>Not required, default is to use the full colour palette in the DIRECTOUTPUTCONFIG file.</p> <p>This parameter allows you to limit the colour palette used by the RGB devices (RGB_OUTPUT) for a specific game. For example, if you want to restrict to greens and yellows for 'Plants Vs Zombies' a line like</p> <p><code>GAME_COLOUR=Plants VS. Zombies,Lime,Green,Yellow,Gold,Lawn_Green,Chart_Reuse,Green_Yellow,Forest_Green,Dark_Green,Yellow_Green,Light_Green</code></p> <p>would do it.</p> <p>The Game Name is automatically detected for Pinball FX2 and Pinball FX3 when launched with the [TABLEFILE] as a parameter, ie the default mode from PinballX. If you wish to use a separate palette via GAME_COLOUR for other emulators you will need to force the GAME_NAME via message just before you launch that emulator, ie \"DOFLinxMsg GAME_NAME=SomeTable\".</p> <p>Even with a limited palette via this option, KEY_TO_RGB can still use any colour in the full range.</p>"},{"location":"parameters/11_The_Parameters.html#joy_port","title":"<code>JOY_PORT=</code>","text":"<p>Not required, this parameter can be left out of the INI file, only used with FX3 nudge. Default = 1.</p> <p>The port number of the joystick port, between 1 and 16, that the Pinscape accelerometer maps to.</p>"},{"location":"parameters/11_The_Parameters.html#joy_x_offset","title":"<code>JOY_X_OFFSET</code>","text":""},{"location":"parameters/11_The_Parameters.html#joy_y_offset","title":"<code>JOY_Y_OFFSET=</code>","text":"<p>Not required, these parameters can be left out of the INI file, only used with FX3 nudge. Default = 0.</p> <p>These values are the offset from zero of the resting position of the joystick. They can be found using the \"Test Joy Stick\" function from the right-click test menu when DOFLinx is in DEBUG.</p>"},{"location":"parameters/11_The_Parameters.html#key_to_colourkkdoooccckkdoooccckkdoooccc","title":"<code>KEY_TO_COLOUR=KK,DOOO,CCC,KK,DOOO,CCC,KK,DOOO,CCC</code>","text":"<p>Default is no KEY_TO_COLOUR activity, this parameter can be left out of the INI file.</p> <p>A comma separated list in sets of three parameters key(KK), output (DOOO), colour to set(CCC).</p> <p>This is used to configure an RGB device to a set colour when a key is pressed. For example, set you under cabinet RGB to display Red when a nudge key is pressed.</p>"},{"location":"parameters/11_The_Parameters.html#key_to_colour_timerkkdooocccmmmmkkdooocccmmmm","title":"<code>KEY_TO_COLOUR_TIMER=KK,DOOO,CCC,MMMM[,KK,DOOO,CCC,MMMM]</code>","text":"<p>Default is no KEY_TO_COLOUR_TIMER activity, this parameter can be left out of the INI file.</p> <p>A comma separated list in sets of four parameters key (KK), output(DOOO), colour to set (CCC) and the time in milliseconds to display that colour (MMM).</p> <p>This is used to set an RGB to a defined colour for a set time from when a key is pressed. The RGB will revert back to colour that it was prior, or would have been in the RGB sequence when the timer expirers. While active any RGB_OUTPUT activity on that RGB port is suspended.</p>"},{"location":"parameters/11_The_Parameters.html#key_to_colour_togglekkdoooccckkdoooccckkdoooccc","title":"<code>KEY_TO_COLOUR_TOGGLE=KK,DOOO,CCC[,KK,DOOO,CCC,KK,DOOO,CCC]</code>","text":"<p>Default is no KEY_TO_COLOUR_TOGGLE activity, this parameter can be left out of the INI file.</p> <p>A comma separated list in sets of three parameters key(KK), output (DOOO), colour to set(CCC).</p> <p>This is used to set an RGB to the defined colour while the key is pressed and then revert back to the colour that was there prior, or would have been in the RGB sequence, when the key is released. While pressed any RGB_OUTPUT activity on that RGB port will be suspended.</p>"},{"location":"parameters/11_The_Parameters.html#key_to_commandnnnccccnnncccc","title":"<code>KEY_TO_COMMAND=NNN,CCCC[,NNN,CCCC]</code>","text":"<p>Default is no KEY_TO_COMMAND activity, this parameter can be left out of the INI file.</p> <p>A comma separated list of button names (BUT-ST, BUT_B1, etc) and Actions as defined in the [COMMAND] section of a FX3 or MAME file.</p> <p>To make button #1 (fire) trigger a \"shoot\" command you would have KEY_TO_COMMAND=BUT_B1,shoot</p> <p>Then define the \"shoot\" action, such as;</p> <pre><code>[COMMAND]\nshoot|ON|FF_DOR E216,-1\n</code></pre>"},{"location":"parameters/11_The_Parameters.html#key_to_outputkkdoookkdoookkdooo","title":"<code>KEY_TO_OUTPUT=KK,DOOO[,KK,DOOO,KK,DOOO]</code>","text":"<p>Default is no key KEY_TO_OUTPUT activity, this parameter can be left out of the INI file.</p> <p>A comma separated list in sets of keys (KK) and the corresponding output (DOOO) to turn on when its pressed. The output remains on while the key is pressed.</p> <p>This can be used to turn on a button LED when the button is pressed, making the cabinet seem more interactive. It can be used to turn on a relay when a button is pressed activating a toy or relay for other purposes.</p> <p>Keys can be defined more than once meaning that one key can be set to turn on multiple outputs while pressed, ie light its own LED and run a relay or toy.</p>"},{"location":"parameters/11_The_Parameters.html#key_to_output_timerkkdooommmmkkdooommmm","title":"<code>KEY_TO_OUTPUT_TIMER=KK,DOOO,MMMM[,KK,DOOO,MMMM]</code>","text":"<p>Default is no key KEY_TO_OUTPUT_TIMER activity, this parameter can be left out of the INI file.</p> <p>A comma separated list in sets of keys (KK) and the corresponding output (DOOO) to turn on for (MMMM) when its pressed. The output remains on until MMMM milliseconds have expired.</p> <p>This can be used to turn run a shaker, turn on a beacon for s short period as a key is pressed.</p> <p>Keys can be defined more than once meaning that one key can be set to turn on multiple outputs for different time periods.</p>"},{"location":"parameters/11_The_Parameters.html#key_to_romkkcccdddkkcccddd","title":"<code>KEY_TO_ROM=KK,CCC,DDD[,KK,CCC,DDD]</code>","text":"<p>Default is no KEY_TO_ROM activity, this parameter can be left out of the INI file.</p> <p>To use this command you must have previously set a ROM with FF_ROM=</p> <p>This command is designed to allow the use of addressable LEDs with emulators other than FP, FX or VP such as MAME.</p> <p>A comma separated list in sets of keys (KK) with the corresponding ROM command (CCC) and duration (DDD) for that command.</p> <p>ROM commands must be set in the respective DirectOutputConfigXX.ini file. For MX ROM commands this is likely to be DIrectOutputConfig30.ini. The command will look something like E120 or E410. The duration is set in milliseconds for the command to be active. There are two special durations, 0 to turn the command off, and -1 for the command to run using its default time contained in the DirectOutputConfigXX.ini file.</p> <p>The command is use looks like KEY_TO_ROM=A0,E130,-1,A1,110,500</p>"},{"location":"parameters/11_The_Parameters.html#key_to_xbox_rumble-kkcmssdddkkcmssddd","title":"<code>KEY_TO_XBOX_RUMBLE= KK,C,M,SS,DDD[,KK,C,M,SS,DDD]</code>","text":"<p>No default, only required if using this functionality.</p> <p>This functionality allows Xbox rumble controls to be driven from pressed keys. By setting this parameter you can drive the selected Xbox motor on the selected controller at any valid speed for a settable number of milliseconds.</p> <p>Load a series of keys and rumble motors, intensity and durations.</p> <p>KK is the key identifier to trigger this rumble.</p> <p>C is the Xbox controller from 1 to 4. You can use the GamePad test screen in DOFLinx (available when in DEBUG and visible) to determine the controller number.</p> <p>M is the motor, so L, R or B for both.</p> <p>SS is the motor speed. Valid values for an XBox motor speed are 0 to 65535 (100%)</p> <p><code>DDD</code> is the duration in milliseconds.</p> <p>KEY_TO_XBOX_RUMBLE=21,1,L,50000,1000,J0103,1,R,30000,1500 will turn on either the left rumble motor to a speed of 50000 (about 75%) for 1 second when the Page Up key is pressed, and turn on the right rumble motor to a speed of 30000 (about 50%) for 1.5 seconds when the 3^rd^ button on joystick #1 is pressed.</p>"},{"location":"parameters/11_The_Parameters.html#l_flipper_keykk","title":"<code>L_FLIPPER_KEY=KK</code>","text":"<p>No default, required parameter.</p> <p>This is the key code for the left flipper key.</p>"},{"location":"parameters/11_The_Parameters.html#l_flipper_outputdooo","title":"<code>L_FLIPPER_OUTPUT=DOOO</code>","text":"<p>No default, required parameter.</p> <p>This is port to trigger for the solenoid / contactor when the left flipper key is pressed</p>"},{"location":"parameters/11_The_Parameters.html#link_xxdooofffffmmmmiii-dooofffffmmmmiiidoooffffmmmmiii","title":"<code>LINK_xx=DOOO,FFFFF,MMMM,III[, DOOO,FFFFF,MMMM,III,DOOO,FFFF,MMMM,III]</code>","text":"<p>No default, required for the FP and FX links.</p> <p>A comma separated list of sets of output (DOOO), Default on time for the device (FFFF), maximum on time for the device (MMMM) at intensity (III). You can have multiple sets of these three just in case you need multiple outputs for the one logical device.</p> <p>The default on time is used when an FP or FX author triggers the device with a default on time, quite normal for solenoid based devices. Using the default on time allows you to set the best time for your device. The maximum on time allows you to stop a FP author from turning on your solenoid, etc for a super long time and not turning it off. Turning on a solenoid / contactor for too long may cause it to overheat. It is normal for a FP and FX author to turn on your flipper solenoid on key down and off at key up, as such, don't set the maximum on-time for flippers to anything too short, I'd suggest at least 10000 for 10 seconds.</p> <p>Intensity can be in the range of 0 to 255 where 0 is off (ie the device will never turn on despite being triggered), through to 255, being fully on. In most circumstances this will be 255. Situations where it might be a different value are for something like a shaker motor that needs to run at 50% power, in that case set it to 128. This value will only work properly for output devices (and boosters if applicable) that use proportional outputs, for example LedWiz, PacLED.</p> <p>For xx being as per below. ie LINK_MC=1030,75,1000,255 sets the mid field centre solenoid / contactor to device #1, port 30 with a default time of 75ms, a maximum on time of 1 second, with the intensity set to 255 being fully on.</p> <pre><code>LF = Left flipper\nRF = Right flipper\nLS = Left slingshot\nRS= Right slingshot\nML = Mid field left solenoid\nMC = Mid field centre solenoid\nMR = Mid field right solenoid\nBL = Back left solenoid\nBC = Back centre solenoid\nBR = Back right solenoid\nSH = Shaker motor\nGR = Gear motor\nKN = Knocker\nFN = Fan\nBE = Bell\nC1 = Chime 1 (high note)\nC2 = Chime 2 (mid note)\nC3 = Chime 3 (low note)\n</code></pre>"},{"location":"parameters/11_The_Parameters.html#link_xxdooomodettttiiidooomodettttiii","title":"<code>LINK_xx=DOOO,MODE,TTTT,III[,DOOO,MODE,TTTT,III]</code>","text":"<p>No default, required for the FP and FX link.</p> <p>A comma separated list of sets of output (DOOO), MODE being ON or FLASH, this allows for DOFLinx to pulse the output or just turn it on. Some physical devices will flash themselves, whereas others need the output to be pulsed. TTTT is only relevant for MODE FLASH, it is the time for each on then off pulse. So a TTTT of 100Ms will turn the output on for 100Ms then off for 100Ms.</p> <p>Intensity can be in the range of 0 to 255 where 0 is off (ie the device will never turn on despite being triggered), through to 255, being fully on. In most circumstances this will be 255. Situations where it might be a different value are for something like a beacon that needs to run at 50% power, in that case set it to 128. This value will only work properly for output devices (and boosters if applicable) that use proportional outputs, for example LedWiz, PacLED.</p> <pre><code>SR = Strobe\nBK = Beacon\n</code></pre> <p>LINK_SR=1005,ON,0,255 -- This will set device #1, port #5 to be turned on when the strobe is activated</p> <p>LINK_SR=1005,FLASH,150,255 -- This will turn device #1, port #5 to be on for 150Ms then off for 150Ms over and over for the time the device is turned on from the FP table.</p>"},{"location":"parameters/11_The_Parameters.html#link_but_xxdooocccckkdooocccckk","title":"<code>LINK_BUT_xx=DOOO,CCCC,KK[,DOOO,CCCC,KK]</code>","text":"<p>No default, required for the FP, FX and MAME link.</p> <p>A comma separated list of devices to activate when the associated button LED illumination message is sent as an action. Multiple devices are possible, ie you have more than one coin button and want to turn them all on.</p> <p>The button can be either a single LED or RGB colour based button. For a single LED illuminated button set CCCC as the colour to MONO LINK_BUT_EB=1002,MONO,4A . Otherwise the colour you want the button to be illuminated as, LINK_BUT_EB=1002,YELLOW,4A. Where the input key is \"J\" (4A)</p> <p>The third parameter is the key code (KK) that this button produces when pressed. So if the key is a number 1 then its 31, if it's a number 5 then its 35. These are the same key codes used elsewhere in DOFLinx. Having the keycode is important if you wish to use key alias elsewhere in DOFLinx. For example, if you wish to use the KEY_TO_COLOUR_TIMER= and not specifiy a key code, you can specify a button name, ie BUT_P1. This means that in all of your SUP.INI, MAME, FX3 files you can use a key alias and not have to define the key code everyone. Much simpler for transportable configuration files that we can all share.</p> <p>For xx being as per below. ie LINK_BUT_ST=1003,Cyan,31 sets the Start button illumination LED to device #1, port 3, makes the colour of the RGB button LEDs cyan, and defines the Start Button input key code(ie the key stroke when you press the start button) as \"1\". If the button is a colour button then the device and port is the red LED of the RGB LED within the illuminated button.</p> <pre><code>BUT_ST = Start button\nBUT_EB = Extra Ball button\nBUT_EX = Exit button\nBUT_CN = Coin button\nBUT_LB = Launch Ball button\nBUT_FR = Fire Button\nBUT_P1 = Player 1\nBUT_P2 = Player 2\nBUT_P3 = Player 3\nBUT_P4 = Player 4\nBUT_PS = Pause\nBUT_RE = Reset\nBUT_LF = Flipper Left\nBUT_RF = Flipper Right\nBUT_ML = Magna Save Left\nBUT_MR = Magna Save Right\nBUT_B1 -- BUT_B8 = Arcade buttons\nBUT_CH = Cheat\nBUT_MN = Menu\n</code></pre>"},{"location":"parameters/11_The_Parameters.html#link_xxdoooccccdooocccc-the-old-way-of-doing-it-retained-for-compatibility-from-v710","title":"<code>LINK_xx=DOOO,CCCC,[,DOOO,CCCC]</code> the old way of doing it, retained for compatibility from V7.10`","text":"<p>No default, required for the FP, FX and MAME link.</p> <p>A comma separated list of devices to activate when the associated button LED illumination message is sent as an action. Multiple devices are possible, ie you have more than one coin button and want to turn them all on.</p> <p>The button can be either a single LED or RGB colour based button. For a single LED illuminated button set CCCC as the colour to MONO or just leave it blank, LINK_EB=1002,MONO or LINK_EB=1002, . Otherwise the colour you want the button to be illuminated as, LINK_EB=1002,YELLOW.</p> <p>For xx being as per below. ie LINK_ST=1003 sets the Start button illumination LED to device #1, port 3. If the button is a colour button then the device and port is the red LED of the RGB LED within the illuminated button.</p> <pre><code>ST = Start button\nEB = Extra Ball button\nEX = Exit button\nCN = Coin button\nLB = Launch Ball button\nFR = Fire Button\n</code></pre>"},{"location":"parameters/11_The_Parameters.html#link_xxxxdooodooo","title":"<code>LINK_xxxx=DOOO[,DOOO]</code>","text":"<p>No default, required for the FP, FX and MAME link.</p> <p>A comma separated list of devices to activate when the associated flasher message is sent. Multiple devices are possible, ie you have more than one centre flasher and want to turn them all on.</p> <p>For xxxx being as per below. ie LINK_FLCN=1003 sets the red LED of the flasher to device #1, port 3.</p> <pre><code>FLOL = Flasher outer left\nFLIL = Flasher Inner Left\nFLCN = Flasher Centre\nFLOR = Flasher Outer Right\nFLIR = Flasher Inner Right\n</code></pre>"},{"location":"parameters/11_The_Parameters.html#load_soundnnnvspeakersfile1filex","title":"<code>LOAD_SOUND=NNN,V,SPEAKER(S),File1[,FileX]</code>","text":"<p>Used in the [STARTUP] section of a game file to load SSF sounds. Unless you are customising this will not be relevant to you.</p> <p>NNN is the label used to identify this sound when using FF_SSF in a table.FX file.</p> <p>V is volume from 1 to 100%, mostly this will be 100 unless you need the sound to be quieter relative to other SSF sounds.</p> <p>Speaker(s) specifies where to output the sound. Available options are:</p> Option 7.1 5.1 2 speakers FRONT Yes SIDE Yes Becomes FRONT Becomes FRONT REAR Yes Becomes FRONT CENTRE Yes Becomes FRONT LEFT_FRONT Yes RIGHT_FRONT Yes LEFT_SIDE Yes Becomes FRONT_LEFT Becomes FRONT_LEFT RIGHT_SIDE Yes Becomes FRONT_RIGHT Becomes FRONT_RIGHT LEFT_REAR Yes Becomes FRONT_LEFT RIGHT_REAR Yes Becomes FRONT_RIGHT <p>File1 to FileX are the WAV files to load for this sound. You at a minimum one file. When there is more than one sound file loaded, they will play sequentially each time this sound is called.</p>"},{"location":"parameters/11_The_Parameters.html#mame_focus","title":"<code>MAME_FOCUS=</code>","text":"<p>Not required, defaults to 1</p> <p>Enabled is 1, disabled is 0. When enabled DOFLinx shifts focus to MAME every 0.5 seconds for 60 seconds after MAME starts up. This is to assist with focus sometimes doing odd things as MAME starts and then we start an active back glass or other things.</p>"},{"location":"parameters/11_The_Parameters.html#mame_hiscore_folder","title":"<code>MAME_HISCORE_FOLDER=</code>","text":"<p>This is the folder where you can find the MAME high score files. Usually this parameter is not required unless you use a non-standard folder for high scores. DOFLinx use in order;</p> <ol> <li>The folder given in this parameter, if not blank</li> <li>MAME_PATH + \\hiscore\\ - the default from about MAME 0.175</li> <li>MAME_PATH +\\hi\\ - the original default folder</li> </ol>"},{"location":"parameters/11_The_Parameters.html#mame_link_wait_time","title":"<code>MAME_LINK_WAIT_TIME=</code>","text":"<p>Default=5000, can be left out of INI</p> <p>This sets the maximum number of milliseconds to wait for MAME to allow a network connection after the process starts. A couple of seconds should really be enough.</p>"},{"location":"parameters/11_The_Parameters.html#mame_process","title":"<code>MAME_PROCESS=</code>","text":"<p>No default, can be left out of INI.</p> <p>This is the process name of the MAME emulator you are using. It must also appear in the PROCESSES= as an activating process. The MAME process needs to be specifically named as there are so many variants of the MAME executable. For most people on a Windows 10 platform using the core MAME emulator this will be MAME_PROCESS=MAME</p>"},{"location":"parameters/11_The_Parameters.html#mame_score_check_period","title":"<code>MAME_SCORE_CHECK_PERIOD=</code>","text":"<p>Default is 250mS, can be left out of INI</p> <p>This is the maximum delay between score checks for a MAME game.</p>"},{"location":"parameters/11_The_Parameters.html#mame_trigger_output_path","title":"<code>MAME_TRIGGER_OUTPUT_PATH=</code>","text":"<p>No default, can be left out of INI.</p> <p>If this path is set, when a MAME game runs a text-based output file will be created. If the MAME game has outputs, then they will be in a file with the same name as the MAME game. If there are no outputs sent, then a blank file, again with the same name as the game, will be created in a subdirectory of this path called \"NoTriggers\".</p> <p>The trigger names can then be used to build XX.MAME files to trigger actions through DOFLinx.</p> <p>The trigger \"pause\" is suppressed from this output as it can be manually generated in every game by pressing the MAME Pause key. It's a general MAME output, not a specific game trigger. The Pause trigger is still valid, just not potentially placed in every trigger file generated via DOFLinx.</p>"},{"location":"parameters/11_The_Parameters.html#max_flipper_onssss","title":"<code>MAX_FLIPPER_ON=SSSS</code>","text":"<p>Default 5000, can be left out of INI file.</p> <p>This is the maximum time, in milliseconds, that a flipper output can remain on without the flipper key being repressed. This is to provide protection for those worried about burning out solenoids / contacts if you hold in the flipper key too long.</p>"},{"location":"parameters/11_The_Parameters.html#night_mode10","title":"<code>NIGHT_MODE=[1|0]</code>","text":"<p>Default is 0, can be left out of INI file.</p> <p>This setting is designed to be used in real-time, ideally via a message sent to DOFLinx. Setting this on (1) will disable noise making devices (flippers, solenoids, knocker) and let you play without disturbing the rest of the household.</p> <p>When a FP table with a link is active it will disable the device mechanical feedback and re-enable the table sounds. Night Mode can be turned on / off at any time and will notify FP in real-time.</p>"},{"location":"parameters/11_The_Parameters.html#nudge_check_basic_keyboard","title":"<code>NUDGE_CHECK_BASIC_KEYBOARD=</code>","text":"<p>Not required, this parameter can be left out of the INI, the default is 0 or disabled.</p> <p>Setting this to 1, on, will enable checking of the Pinscape nudge checking when DOFLinx is operating in its most basic mode checking keyboard keys for a process that triggers it in the PROCESSES= parameter. This allows other emulators to use the joystick nudge checking.</p>"},{"location":"parameters/11_The_Parameters.html#nudge_left_key","title":"<code>NUDGE_LEFT_KEY=</code>","text":""},{"location":"parameters/11_The_Parameters.html#nudge_forward_key","title":"<code>NUDGE_FORWARD_KEY=</code>","text":""},{"location":"parameters/11_The_Parameters.html#nudge_right_key","title":"<code>NUDGE_RIGHT_KEY=</code>","text":"<p>Not required, this parameter can be left out of the INI file, only used with FX3 nudge.</p> <p>These are the keys setup within FX3 to trigger keyboard nudge. The default keys are L-Ctrl, R-Ctrl and Space. Sadly, the L-Ctrl and R-Ctrl keys do not work, as such, the keys will need to be changed in FX3 to something else. I suggest \"L\" and \"R\". While in the form KK, these are only keyboard keys, they cannot be Xbox buttons.</p>"},{"location":"parameters/11_The_Parameters.html#nudge_left_input","title":"<code>NUDGE_LEFT_INPUT=</code>","text":""},{"location":"parameters/11_The_Parameters.html#nudge_forward_input","title":"<code>NUDGE_FORWARD_INPUT=</code>","text":""},{"location":"parameters/11_The_Parameters.html#nudge_right_input","title":"<code>NUDGE_RIGHT_INPUT=</code>","text":"<p>Not required, this parameter can be left out of the INI file, only used with FX3 nudge.</p> <p>If like me, you change the keys in FX3 to trigger nudge (as per NUDGE_???_KEY= above) but don't want to reprogram your nudge buttons away from L-Ctrl and R-Ctrl because you use them for other inputs, ie VPX or PinballX, then setup these parameters and DOFLinx will parse the Ctrl key presses to the new FX3 nudge keys. These are in the format of KK, so can e keyboard keys or Xbox buttons.</p>"},{"location":"parameters/11_The_Parameters.html#nudge_wait","title":"<code>NUDGE_WAIT=</code>","text":"<p>Not required, this parameter can be left out of the INI file, default is 1500</p> <p>This is the minimum delay between nudge events from the Pinscape. It allows you to stop getting multiple nudge events from the single nudge. The minimum this can be set to is 1500Ms (1.5 seconds)</p> <p>Normally you should not need to play with this, but hey why not give it a try.</p>"},{"location":"parameters/11_The_Parameters.html#output_game_name01","title":"<code>OUTPUT_GAME_NAME=[0|1]</code>","text":"<p>Default is 0, can be left out of INI file. 0=off, 1=on.</p> <p>When turned on it will force the Game Name to be written to the debug log regardless of the DEBUG setting. This is handy when you are setting up GAME_COLOUR palettes and want the game name without a full DOFLinx.LOG being created.</p>"},{"location":"parameters/11_The_Parameters.html#path_b2s_server","title":"<code>PATH_B2S_SERVER=</code>","text":"<p>The path where your B2SServerEXE.exe is located. The default is C:\\VP  </p> <p>This value can be set via real-time command or in an INI file.</p> <p>This parameter is required if you plan to use B2S back glass files with Pinball FX2 or Pinball FX3. A common place to find this file would be C:\\VP\\Tables\\ if you have a nice neat VP setup.</p>"},{"location":"parameters/11_The_Parameters.html#path_dof2dmd","title":"<code>PATH_DOF2DMD=</code>","text":"<p>The path to where DOF2DMD has been installed. Ie PATH_DOF2DMD=C:\\DMD\\</p> <p>If you don't have DOF2DMD then don't add this parameter to your INI file.</p> <p>If the path is set and dof2dmd is not running, then DOFLinx will attempt to run dof2dmd in the background for you.</p>"},{"location":"parameters/11_The_Parameters.html#path_fx2","title":"<code>PATH_FX2=</code>","text":"<p>The path to locate FX2 files in. This value can be set via a real-time command or in an INI file.</p> <p>The path can be absolute, ie C:\\DOFLinx\\FX2\\ or relative from the location where the program executes from, ie if the program is in C:\\DirectOutput and you have a DOFLinx_FX2 folder below that the value can be DOFLinx_FX2  </p> <p>Not setting a value or setting it to nothing means the FX2 files are to be located in the same folder as DOFLinx.exe</p>"},{"location":"parameters/11_The_Parameters.html#path_fx3","title":"<code>PATH_FX3=</code>","text":"<p>Same as above but for FX3 files.</p> <p>Usually C:\\DOFLinx\\FX3\\</p>"},{"location":"parameters/11_The_Parameters.html#path_fx","title":"<code>PATH_FX=</code>","text":"<p>Same as above but for FX files (Pinball FX).</p> <p>Usually C:\\DOFLinx\\FX\\</p>"},{"location":"parameters/11_The_Parameters.html#path_fx2_b2s","title":"<code>PATH_FX2_B2S=</code>","text":"<p>The path to the directb2s files for FX2 games. This value can be set via real-time command or in the INI file.</p> <p>The path can be absolute, ie C:\\DOFLinx\\FX2_B2S\\ or relative from the location where the program executes from, ie if the program is in C:\\DirectOutput and you have a DOFLinx_FX2_B2S folder below that the value can be DOFLinx_FX2_B2S  </p> <p>The value must end with a backslash   </p> <p>Not setting a value or setting it to nothing means the B2S files are to be located in the same folder as DOFLinx.exe</p>"},{"location":"parameters/11_The_Parameters.html#path_fx3_b2s","title":"<code>PATH_FX3_B2S=</code>","text":"<p>Same as above but for FX3 B2S files. If you already have PATH_FX2_B2S= setup, you can point this to the same folder. About 90% of B2S files are the same between FX2 and FX3 and it saves having two copies.</p>"},{"location":"parameters/11_The_Parameters.html#path_fx_b2s","title":"<code>PATH_FX_B2S=</code>","text":"<p>Same as above but for FX B2S files (Pinball FX).</p>"},{"location":"parameters/11_The_Parameters.html#path_hi2txt","title":"<code>PATH_HI2TXT=</code>","text":"<p>The path to where Hi2Txt has been installed. Hi2Txt is used to get high scores from MAME.</p>"},{"location":"parameters/11_The_Parameters.html#path_ini","title":"<code>PATH_INI=</code>","text":"<p>The path to locate INI files in. This value can be set as a command line argument, via a real-time command or in an INI file. Obviously if you wish to locate your <code>DOFLinx.INI</code> in this path then you must use the command line to set this value.</p> <p>The path can be absolute, ie C:\\DOFLinx\\INI\\ or relative from the location where the program executes from, ie if the program is in C:\\DirectOutput and you have a DOFLinx_INI folder below that the value can be DOFLinx_INI  </p> <p>Not setting a value or setting it to nothing means the INI files are to be located in the same folder as DOFLinx.exe</p>"},{"location":"parameters/11_The_Parameters.html#path_mame","title":"<code>PATH_MAME=</code>","text":"<p>The path to locate MAME files in. This value can be set via a real-time command or in an INI file.</p> <p>The path can be absolute, ie C:\\DOFLinx\\MAME\\ or relative from the location where the program executes from, ie if the program is in C:\\DOFLinx and you have a DOFLinx_MAME folder below that the value can be DOFLinx_MAME\\ . Absolute path names such as C:\\DOFLinx\\MAME\\ are best.</p> <p>The value must end with a backslash   </p> <p>Not setting a value or setting it to nothing means the MAME files are to be located in the same folder as DOFLinx.exe</p>"},{"location":"parameters/11_The_Parameters.html#path_pixelcade","title":"<code>PATH_PIXELCADE=</code>","text":"<p>The path to where Pixelcade has been installed. Ie PATH_PIXELCADE=C:\\Pixelacde  </p> <p>If you don't have Pixelcade then don't add this parameter to your INI file.</p> <p>If the path is set and pixelweb is not running, then DOFLinx will attempt to run pixelweb in the background for you.</p>"},{"location":"parameters/11_The_Parameters.html#pincontrol2_universe","title":"<code>PINCONTROL2_UNIVERSE=</code>","text":"<p>DEPRECIATED -- Now able to pick this up from your cabinet.xml from V6.50</p> <p>No default, can be left out on INI</p> <p>If you have a PinControl2 board you will need to set this parameter and PINCONTROL_BROADCST. The normal setting required will be PINCONTROL2_UNIVERSE=0, if you need anything else you will have been given that parameter value with your board.</p>"},{"location":"parameters/11_The_Parameters.html#pincontrol2_broadcast","title":"<code>PINCONTROL2_BROADCAST=</code>","text":"<p>DEPRECIATED -- Now able to pick this up from your cabinet.xml from V6.50</p> <p>No default, can be left out on INI</p> <p>If you have a PinControl2 board you will need to set this parameter and PINCONTROL_UNIVERSE. The normal setting required will be PINCONTROL2_BROADCAST=192.168.178.50</p> <p>, if you need anything else you will have been given that parameter value with your board.</p>"},{"location":"parameters/11_The_Parameters.html#pixelcade_game_start_highscore10","title":"<code>PIXELCADE_GAME_START_HIGHSCORE=1/0</code>","text":"<p>Default 0, can be left out of the INI</p> <p>Set this to 1 DOFLinx will display MAME high scores when a game starts.</p>"},{"location":"parameters/11_The_Parameters.html#pixelcade_menu_highscore10","title":"<code>PIXELCADE_MENU_HIGHSCORE=1/0</code>","text":"<p>Default 1, can be left out of INI</p> <p>When set to 1 then DOFLinx will display MAME game high scores on the Pixelcade device as you move through your selections on your front end menu. Currently front end menu systems supported are -- Pinup Popper. When 0 / false then only the appropriate marquee will be displayed with no high scores.</p>"},{"location":"parameters/11_The_Parameters.html#pixelcade_replace_led_marquee_after_animation10","title":"<code>PIXELCADE_REPLACE_LED_MARQUEE_AFTER_ANIMATION=1/0</code>","text":"<p>Default 0, can be left out of INI</p> <p>Possibly the longest parameter ... although I'm sure I can beat it later!</p> <p>1 = yes / true, 0 = false / no</p> <p>Determines if DOFLinx will redisplay the MAME game marquee after an animation command in the game.MAME file is executed. So if an explosion is shown when you hit a ship, do you want the marquee for the game to be displayed on the LED screen after its finished. Having this on makes sense when you only have an LED screen. If you have an LCD and LED then the marquee will already be on the LCD, so it makes sense to keep the LED for animations only and not duplicate the marquee. But then, here we go, its your choice!</p>"},{"location":"parameters/11_The_Parameters.html#processespppppppppppp","title":"<code>PROCESSES=PPPP,PPPP,PPPP</code>","text":"<p>Default Pinball FX2, can be left out of INI file.</p> <p>This is the name(s) of the process(es) that will \"wake up\" DOFLinx. By default, it is 'Pinball FX2' only. When the process goes away again DOFLinx goes back into its idle state.</p> <p>The process names are as they can be seen in Task Manager. For example</p> <p>PROCESSES=Pinball FX2,Pinball FX3,Future Pinball,PinballFX-Win64-Shipping</p>"},{"location":"parameters/11_The_Parameters.html#process_add","title":"<code>PROCESS_ADD=</code>","text":"<p>No default, can be left out of INI file.</p> <p>A comma separated list of process names to add to the PROCESS= set while DOFLinx is running.</p>"},{"location":"parameters/11_The_Parameters.html#process_del","title":"<code>PROCESS_DEL=</code>","text":"<p>No default, can be left out of INI file.</p> <p>A comma separated list of process names to remove from the PROCESS= set while DOFLinx is running.</p>"},{"location":"parameters/11_The_Parameters.html#plunger_axisa","title":"<code>PLUNGER_AXIS=A</code>","text":"<p>No default, can be left out of INI file.</p> <p>\"A\" is the axis to read the plunger position from. At present the only valid option is \"Z\" (no quotes) indicating the Z-axis for a plunger. This is used to allow a plunger to trigger ball launch in FX3.</p>"},{"location":"parameters/11_The_Parameters.html#plunger_joystick_numberxx","title":"<code>PLUNGER_JOYSTICK_NUMBER=XX</code>","text":"<p>No default, can be left out of INI file.</p> <p>Valid values are 1 to 16 being the joystick ID # that the plunger device is connected to.</p>"},{"location":"parameters/11_The_Parameters.html#plunger_keykk","title":"<code>PLUNGER_KEY=KK</code>","text":"<p>No default, can be left out of INI file.</p> <p>The key number to send to FX3 when the plunger passes the PLUNGER_PULL_POINT and then returns back past the PLUNGER_RELEASE_POINT.</p> <p>To send the default launch key of FX3 being  this line should read PLUNGER_KEY=0D"},{"location":"parameters/11_The_Parameters.html#plunger_pull_pointnnnnn","title":"<code>PLUNGER_PULL_POINT=NNNNN</code>","text":"<p>No default, can be left out of INI file.</p> <p>If PLUNGER_AXIS and PLUNGER_JOYSTICK_PORT are set, this is to point at which the plunger being pulled is registered. Values can be determined from the Pinscape setup tool or DOFLinx in DEBUG mode using the Test Joystick function.</p> <p>If your plunger has a Z-Axis range of 0 at rest through to 65000 at full pull, then PLUNGER PULL_POINT could be 40000 and PLUNGER_RELEASE_POINT=20000. You will need to test to determine the best values. There should be a reasonable gap between PLUNGER_PULL_POINT and PLUNGER_RELEASE_POINT to avoid accidental triggering.</p>"},{"location":"parameters/11_The_Parameters.html#plunger_release_pointnnnnn","title":"<code>PLUNGER_RELEASE_POINT=NNNNN</code>","text":"<p>No default, can be left out of INI file.</p> <p>See PLUNGER_PULL_POINT</p>"},{"location":"parameters/11_The_Parameters.html#process_to_active_timemmmm","title":"<code>PROCESS_TO_ACTIVE_TIME=MMMM</code>","text":"<p>Default is 2000ms, can be left out of INI file.</p> <p>This allows you to customise the time between the detection of a process to wake up DOFLInx as defined in PROCESSES= , and when DOFLinx 'wakes up'. The reason to tweak this is to allow for odd start-up processes whereby the PROCESSES process is detected quickly but configuration messages are taking a while to be sent through by something like the DOFLinxMsg utility as a 'Launch Before' process. If in doubt, leave it alone.</p>"},{"location":"parameters/11_The_Parameters.html#quit_after_process01","title":"<code>QUIT_AFTER_PROCESS=[0|1]</code>","text":"<p>Default is 0, can be left out of INI file. 0=off, 1=on.</p> <p>When turned on, DOFLinx will shutdown after the monitored process that woke it disappears. This can be used in Launch Before mode to stop DOFLinx without needing to be killed by batch file, etc.</p> <p>So if you are monitoring the default process of 'Pinball FX2' and start up DOFLinx via a Launch Before option, with the parameter set to 1, DOFLinx will shutdown when Pinball FX2 stops and you return to your menu, ie PinballX.</p> <p>Note</p> <p>This mode of opereration is not recommended</p>"},{"location":"parameters/11_The_Parameters.html#r_flipper_keykk","title":"<code>R_FLIPPER_KEY=KK</code>","text":"<p>See L_FLIPPER_KEY and just think right.</p>"},{"location":"parameters/11_The_Parameters.html#r_flipper_outputdooo","title":"<code>R_FLIPPER_OUTPUT=DOOO</code>","text":"<p>See L_FLIPPER_OUTPUT and just think right.</p>"},{"location":"parameters/11_The_Parameters.html#rgb_min_timessss","title":"<code>RGB_MIN_TIME=SSSS</code>","text":"<p>Default is 5000, this parameter can be left out of the INI file.</p> <p>The time, in milliseconds, used by the RGB_STYLE to change RGB_OUTPUT.</p>"},{"location":"parameters/11_The_Parameters.html#rgb_outputdooodooodooo","title":"<code>RGB_OUTPUT=DOOO,DOOO,DOOO</code>","text":"<p>No default, leave if out or blank if you don't want or have RGB devices.</p> <p>A comma separated list of DOOO for the RGB devices you want to cycle through colours. The DOOO is the port of the red device, the Green is assumed to be DOOO + 1 and the Blue assumed to be DOOO + 2.</p> <p>The RGB_OUTPUT sets RGB colours from the entire, or GAME_COLOUR palette, according to RGB_STYLE, RGB_TRIGGER and RGB_MIN_TIME parameters.</p>"},{"location":"parameters/11_The_Parameters.html#rgb_stylerainbowrainbow_alternaterandomcccc","title":"<code>RGB_STYLE=[RAINBOW|RAINBOW_ALTERNATE|RANDOM|CCCC]</code>","text":"<p>Default is RAINBOW, this can be left out of the INI file.</p> <p>This parameter determines how colours are selected for the RGB_OUTPUT devices.</p> <p>RAINBOW cycles through the current colour palette list from beginning to end. So that could be the default entire colour palette, or the sub-set defined by GAME_COLOUR.</p> <p>RAINBOW_ALTERNATE cycles through the current colour palette list from beginning to end. So that could be the default entire colour palette, or the sub-set defined by GAME_COLOUR. Uses the next two colours from the palette and applies then alternately to each RGB device in the list. If the two colours were red and blue, and you had four RGB devices then device #1 and #3 would be red and #2 and #4 would be blue.</p> <p>RANDOM, as the name implies, picks the next colour at random from the current colour palette.</p> <p>RANDOM_DIFF, picks a new random colour from the current colour palette that is different for each RGB device provided.</p> <p>RAINBOW_DIFF, picks a new random colour from the entire colour range that is different for each RGB device provided.</p> <p>CCCC, is any valid colour name in the entire colour palette. This has the effect of setting the RGB output to a fixed colour. Note you must set the RGB_TRIGGER to FIXED</p>"},{"location":"parameters/11_The_Parameters.html#rgb_triggerflippertimefixed","title":"<code>RGB_TRIGGER=[FLIPPER|TIME|FIXED]</code>","text":"<p>Default is TIME, this parameter can be left out of the INI file.</p> <p>This parameter is not relevant if RGB_STYLE has been set to CCCC being a fixed colour as there is nothing to change.</p> <p>When set to FLIPPER, at each flipper press, not more often than RGB_MIN_TIME, the RGB_OUTPUT colour will change using the RGB_STYLE.</p> <p>When set to TIME, the RGB_OUPUT colour will change ever RGB_MIN_TIME.</p> <p>When using a fixed colour via RGB_STYLE=CCCC set this parameter to FIXED.</p>"},{"location":"parameters/11_The_Parameters.html#score_screen","title":"<code>SCORE_SCREEN=</code>","text":"<p>Default is 0, off</p> <p>Seet to 1 to enable the displaying of the building MAME score screen. This screen can then be dragged to any monitor or position.</p> <p>Note, this is not related to displaying scores on Pixelcade devices.</p>"},{"location":"parameters/11_The_Parameters.html#settingiiiidooolllldddsdoooppp","title":"<code>SETTING=IIII,DOOO,LLLL,DDD,S[,DOOO,PPP]</code>","text":"<p>No default, only required if using the settings functionality.</p> <p>This item is repeated for each setting required. Settings are displayed in the order they appear in the INI file.</p> <p>IIII is a unique identifier for the setting. This is used internally to differentiate each setting, as well as for the suffix in the registry if the setting is saved. It can be any length, but probably best to keep it below 10 characters. There is a special unique identifier being \"NIGHT\", this does not require a DOOO setting, it allows the toggling of DOFLinx's night mode setting</p> <p>DOOO is the device port to turn on / off for this setting. In the case of the special identifier \"NIGHT\", just leave the field empty</p> <p><code>LLLLL</code>is the label that appears on screen for this setting. For example, \"Under cabinet lighting\".</p> <p><code>DDD</code> is the default setting, either \"ON\" or \"Off\" without the quotes</p> <p>S is either \"Y\" or \"N\" without the quotes indicating if this setting should be saved upon exit and reloaded in the same state next time the system starts.</p> <p>If an optional second output device / port and pulse width (<code>PPP</code>) is provided, then this setting is treated as a latch based setting. That means the first port will pulse to turn the setting device on, and the second port will pulse to turn the setting device off. This sort of setting device requires a latching relay, so a relay with some additional circuitry. You use a latching relay circuit when you need your setting device's status to survive the DOF framework outputs being reset due to different programs taking control.</p> <p>A latching relay circuit is ideal when you have a DOFLinx settings item turning the power on / off to internal devices. In my case the power supply to my addressable LED array. The power being on / off needs to persist programs starting stopping that may impede the use of a simple single output being turned on to control the power relay.</p> <p>The pulse (<code>PPP</code>) for setting / unsetting the latch is in milliseconds. It shouldn't really be larger than 100, that is 1/10^th^ of a second.</p>"},{"location":"parameters/11_The_Parameters.html#setting_activatekkkkkk","title":"<code>SETTING_ACTIVATE=KK[,KK,KK]</code>","text":"<p>No default, only required if using the settings functionality.</p> <p>One or more key codes used to activate the settings pop up menu. If more than one key code is used then all keys must be pressed at the same time to achieve activation. For example SETTING_ACTIVATE=A0,A1,A2,A3 would require four keys to be held down simultaneously being left shift, right shift, left control, right control. For many this would be the pressing of both flipper and magna save buttons.</p>"},{"location":"parameters/11_The_Parameters.html#setting_changekk","title":"<code>SETTING_CHANGE=KK</code>","text":"<p>No default, only required if using the settings functionality.</p> <p>The key code identifying the key used to change setting values.</p>"},{"location":"parameters/11_The_Parameters.html#setting_downkk","title":"<code>SETTING_DOWN=KK</code>","text":"<p>No default, only required if using the settings functionality.</p> <p>The key code identifying the key used to move down in the settings menu. Ie SETTING_DOWN=A1 would set the right shift, often the right flipper, for this task.</p>"},{"location":"parameters/11_The_Parameters.html#setting_exitkk","title":"<code>SETTING_EXIT=KK</code>","text":"<p>No default, only required if using the settings functionality.</p> <p>The key code identifying the key used to exit the settings menu.</p>"},{"location":"parameters/11_The_Parameters.html#setting_upkk","title":"<code>SETTING_UP=KK</code>","text":"<p>No default, only required if using the settings functionality.</p> <p>The key code identifying the key used to move up in the settings menu. Ie SETTING_UP=A0 would set the left shift, often the left flipper, for this task,</p>"},{"location":"parameters/11_The_Parameters.html#setting_messagettttttt","title":"<code>SETTING_MESSAGE=TTTTTTT</code>","text":"<p>No default, only required if using the settings functionality.</p>"},{"location":"parameters/11_The_Parameters.html#skip_rgb_flasher_test01","title":"<code>SKIP_RGB_FLASHER_TEST=[0|1]</code>","text":"<p>The default is 0, meaning the test is performed.</p> <p>Normally you would not add or use this parameter. It is for a specific override of the test that removes flashers (LINK_FLxx) from the RGB_OUTPUT list. In some cases you can define devices output devices as both RGB and flashers. Normally you want DOFLinx to make a device only operate as either a RGB device or flasher device. So don't use it unless you really know why.</p>"},{"location":"parameters/11_The_Parameters.html#ssf_enabled01","title":"<code>SSF_ENABLED=[0|1]</code>","text":"<p>The default is 0 and this can be left out of your INI file</p> <p>For enabling / disabling SSF, 0 is disabled, 1 is enabled.</p>"},{"location":"parameters/11_The_Parameters.html#ssf_devicen","title":"<code>SSF_DEVICE=N</code>","text":"<p>The default is -1 and this can be left out of your INI file. This is the number of the output sound device according to Windows. Using -1 gives you the default Windows output sound device. Otherwise use a valid output device number, this is usually done if you are not using the default output sound device. With DEBUG= set to 1 or 2, DOFLinx will display your output sound devices, their number and what is the default device.</p>"},{"location":"parameters/11_The_Parameters.html#ssf_sound_path","title":"<code>SSF_SOUND_PATH=</code>","text":"<p>This is the path to the sounds used by the LOAD_SOUND= command in your table.FX file. The DOFLinx installation zip places the sounds setup by default in the \\sounds folder.</p>"},{"location":"parameters/11_The_Parameters.html#trigger_debounce_time","title":"<code>TRIGGER_DEBOUNCE_TIME=</code>","text":"<p>The default is 100Ms. Only required if you want to set it away from the default.</p> <p>This parameter sets the minimum time between triggers. This was added for FX3 where some very quick retriggering for things like flippers was being generated. It stops the same trigger from causing an action within the time set.</p>"},{"location":"parameters/11_The_Parameters.html#xbox_rumble-xxcmssdddxxcmssddd","title":"<code>XBOX_RUMBLE= XX,C,M,SS,DDD[,XX,C,M,SS,DDD]</code>","text":"<p>No default, only required if using this functionality.</p> <p>This functionality allows Xbox rumble controls to be driven from linked toy events in FP and FX2/3. By setting this parameter you can drive the selected Xbox motor on the selected controller at any valid speed for a settable number of milliseconds.</p> <p>XX is the toy trigger event, valid events are;</p> <pre><code>LF = Left flipper\nRF = Right flipper\nLS = Left slingshot\nRS= Right slingshot\nML = Mid field left solenoid\nMC = Mid field centre solenoid\nMR = Mid field right solenoid\nBL = Back left solenoid\nBC = Back centre solenoid\nBR = Back right solenoid\nSH = Shaker motor\nGR = Gear motor\nKN = Knocker\nFN = Fan\n</code></pre> <p>C is the Xbox controller from 1 to 4. You can use the GamePad test screen in DOFLinx (available when in DEBUG and visible) to determine the controller number.</p> <p>M is the motor, so L, R or B for both.</p> <p>SS is the motor speed. Valid values for an XBox motor speed are 0 to 65535 (100%)</p> <p><code>DDD</code> is the duration in milliseconds.</p> <p>XBOX_RUMBLE=LS,1,L,50000,1000,RS,1,R,50000,1000 will turn on either the left or right rumble motor to a speed of 50000 (about 75%) for 1 second when the left or right slingshots are hit.</p> <p>Note: For the various 'colour' based commands the special colour name \"Random\" can be used. This will cause a random colour from the current colour palette to be displayed. The current colour palette is by default all colours unless a set of GAME_COLOUR= has been set up, then that is the current colour palette.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html","title":"Real Time Parameters and Commands","text":"<p>A number of commands and many parameters can be changed while DOFLinx is running. This is made possible by sending commands via Windows inter-process communication. A small utility DOFLinxMsg.exe is included as one way to do this. Another way is a simple VBS script, again an example is included.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#real-time-commands","title":"Real-Time Commands","text":"<p>These commands allow you to control DOFLinx or perform some action outside of those setup per game to occur. Commands are sent from the messaging utility like:</p> <pre><code>DOFLinxMsg QUIT\n</code></pre> <p>Multiple commands can be placed on one line. They need to be separated by a #. So for some colour and a shaker:</p> <pre><code>DOFLinxMsg\nOUTPUT_NOW_TIMER=115,1500#OUTPUT_COLOUR_NOW=109,5000,Yellow\n</code></pre> <p>The commands are:</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#attract_mode01","title":"ATTRACT_MODE=0/1","text":"<p>Turn attract mode on / off.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#game_flag_fileppppffff","title":"GAME_FLAG_FILE=PPPP\\FFFF","text":"<p><code>PPPP</code> is the path and FFFF is the file. When an emulator process is in the PROCESSES list and a GAME_FLAG_FILE is provided, DOFLinx will only wake up if the file name provided, with the extension \".DOFLINX\" exists. This allows for emulators that have some tables correctly DOF'ed to be added to the PROCESSES list. Then in the 'Launch Before' section you run something like:</p> <pre><code>DOFLinxMsg GAME_NAME_FILE=[TABLEPATH]\\[TABLENAME]\n</code></pre> <p>If you then create a file in your tables folder with the same name as the table you want DOFLinx to wake up for with the extension of \".DOFLINX\" then it will provide rudimentary DOF with no additional effort. Of course I do encourage people to continue to add DOF to VP and FP tables, that's proper DOF. It is quite handy for custom tables, just to give them a little more 'feeling'. This is designed for use when DOFLinx is running in Set and Forget mode.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#light_buttons_now","title":"LIGHT_BUTTONS_NOW","text":"<p>Used to immediately turn on all of the buttons that have been defined by BUTTONS_LIT= . This is handy when you define some RGB buttons that you want to turn on when your front end is running but DOFLinx is not fully active because no emulator is running. Just issue the command via DOFLinxMsg or similar.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#killxxxxx","title":"KILL=XXXXX","text":"<p>This sends a Windows kill message to all instances of the process name provided. It does not wait for the process to exit, it just sends the message and continues.</p> <pre><code>DOFLinxMsg \"KILL=Pinball FX2\"\n</code></pre> <p>The double quotes are used on the above since the process has a space in its name. This sample command will send a kill message to all instances of Pinball FX2 running at the time. You would use this as Launch After command when exiting Pinball FX2 back to the menu if you want to ensure that all instances are closed. I use it for those occasions when PinballX doesn't manage to close things on exit.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#output_now_timerdooommmmdooommmm-etc","title":"OUTPUT_NOW_TIMER=DOOO,MMMM,DOOO,MMMM, etc","text":"<p>DOOO is the device / port combination, and MMMM is how long that output will be left on in milliseconds. So, \"DOFLinxMsg OUTPUT_NOW_TIMER=1015,2000\" will turn on device 1, output 15 for 2 seconds. This will occur regardless of DOFLinx being awake for a game or not, so you can have a DOF device triggered by anything you can think of and create a batch file for.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#output_now_colourdooommmmccccdooommmmcccc-etc","title":"OUTPUT_NOW_COLOUR=DOOO,MMMM,CCCC,DOOO,MMMM,CCCC, etc","text":"<p>DOOO is the Red device / port combination for the RGB device, MMMM is how long the RGB displays colour CCCC. This will occur regardless of DOFLinx being awake for a game or not.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#outputs_off","title":"OUTPUTS_OFF","text":"<p>Turn off all outputs now. Handy if you have LED buttons that you turn on at different points and want them all off when you do something like exit your front end. This command can easily be issues vis DOFLinxMsg.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#quit","title":"QUIT","text":"<p>Shutdown DOFLinx immediately. This is much nicer than killing the process from the operating system. It allows DOFLinx to neatly close devices, pipes and return other resources to the operating system.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#start_dof2dmd","title":"START_DOF2DMD","text":"<p>Starts up DOF2DMD.  You may want this if you didn't start it when DOFLinx started, often because you've got a mixture of pinball and Mame.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#stop_dof2dmd","title":"STOP_DOF2DMD","text":"<p>Sends the shutdown command to DOF2DMD. This is far preferable to trying to kill the process. Likely used if you have a mixed arcade and pinball cabinet and want to stop DOF2DMD after you've played a MAME game.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#sup_ini","title":"SUP_INI=","text":"<p>This is the same as the command line argument, but parsed in real-time. It allows a SUP_INI file to be processed without the need to stop and restart DOFLinx. The parameters processed in real-time must abide by the same rules as messages, ie BUTTONS_ON can only be changed while DOFLinx is asleep. If DOFLinx is awake when parsed this parameter, it will be ignored.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#show_in_taskbar01","title":"SHOW_IN_TASKBAR=[0|1]","text":"<p>DOFLinx starts up with this set to 0 (Off)</p> <p>Setting this parameter to 1 (On) will display DOFLinx in the Windows Taskbar rather than hide it completely. Very handy when you are playing around to get things working, etc.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#show_variables","title":"SHOW_VARIABLES","text":"<p>Displays all the key variables in the log file to assist with debugging. This command takes a moment to process, so may cause a slight pause in operation.</p>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#parameters-that-can-be-changed-only-when-doflinx-is-sleeping","title":"Parameters That Can Be Changed Only When DOFLinx is Sleeping","text":"<p>Setting these parameters via the messenger will replace the setting from the INI until you change it again or restart DOFLinx.</p> <pre><code>BUTTONS_ON\nFORCE_ACTIVE\nKEY_TO_COLOUR\nKEY_TO_COLOUR_TIMER\nKEY_TO_COLOUR_TOGGLE\nKEY_TO_OUTPUT\nKEY_TO_OUTPUT_TIMER\nL_FLIPPER_KEY\nL_FLIPPER_OUT\nMAX_FLIPPER_ON\nOUTPUT_GAME_NAME\nR_FLIPPER_KEY\nR_FLIPPER_OUT\nRGB_MIN_TIME\nRGB_OUTPUT\nRGB_STYLE\nRGB_TRIGGER\nQUIT_AFTER_PROCESS\n</code></pre>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#these-parameters-can-only-occur-in-the-doflinxini-file","title":"These parameters can only occur in the <code>DOFLinx.INI</code> file","text":"<pre><code>DIRECTOUTPUTCONFIG\nGAME_COLOUR\nPROCESSES\n</code></pre>"},{"location":"parameters/12_Real_Time_Parameters_and_Commands.html#sending-commands-to-doflinx","title":"Sending Commands To DOFLinx","text":"<p>Commands are sent to DOFLinx via a named pipe \"DOFLINX\". This means you can use the utility provided (DOFLinxMsg), or anything else that will write to the named pipe. A file Sample.vbs is included that shows how to use VB Script to write directly to the named pipe. This allows a lot of flexibility in how you send commands to DOFLinx.</p>"},{"location":"systems/16_Future_Pinball_Link.html","title":"Future Pinball Link","text":"<p>With the addition of some code Future Pinball (FP) can be set to message DOFLinx directly. This allows FP tables to be DOF'ed.</p>"},{"location":"systems/16_Future_Pinball_Link.html#assumptions","title":"Assumptions","text":"<ol> <li>DOFLinx is installed and working</li> <li>Future Pinball is installed and working</li> </ol>"},{"location":"systems/16_Future_Pinball_Link.html#how-does-this-work","title":"How does this work?","text":"<p>DOFLinx detects the FP process, then it waits for the FP table to initialise. If the FP table has DOFLinx code setup within it then a flag is set in memory that DOFLinx reads. DOFLinx then sets its own flag for FP that details the capability, ie shaker, gear, knocker. FP then sends messages by setting memory values to DOFLinx. DOFLinx continuously monitors for these messages while the FP process remains active and processes them as appropriate.</p> <p>DOFLinx has parameters to identify the various solenoids, contactors and toys. FP messages DOFLinx by function, not device / port. In other words, FP would send a message like Left Flipper on for some time. Its then up to DOFLinx to interpret and process that message. As such DOFLinx must know what port, etc to use for each device.</p> <p>Multiple versions of FP have been tested. Any version should work. No changes have been made to FP to allow this to work.</p> <p>In a slightly more technical sense, when enabled via the FP_ATTEMPT_LINK=1 and with FP listed in the PROCESSES= parameter, ie \"PROCESSES=Pinball FX2,Future Pinball\" DOFLinx will look for a link to FP when the FP process starts. If FP_ATEMPT_LINK=0 then DOFLinx will operate as normal and listen to the keyboard keystrokes.</p> <p>If the link is set to run within DOFLinx but not set up within the FP table you are starting, then the link attempt will time out and DOFLinx will handle Future Pinball as per its other configuration. To get a link to FP, the FP table must have the DOFLinx code inserted into it and activated. Examples of how to do this are below.</p>"},{"location":"systems/16_Future_Pinball_Link.html#how-do-i-set-up-for-this","title":"How do I set up for this?","text":"<p>To set yourself up do the following:</p> <ol> <li>Ensure you have \"Future Pinball\" as one of your processes, ie   \"PROCESSES=Pinball FX2,Future Pinball\" in your DOFLinx.INI file.</li> <li>Add the parameter FP_ATTEMPT_LINK=1 to your DOFLinx.INI file</li> <li>Setup all of your LINK_xx= parameters where   xx=LF,RF,LS,RS,ML,MC,MR,BL,BC,BR,SH,GR,KN,ST,EB,CN,EX,LB,FN.SR,BK</li> <li>Add DOFLinx.vbs to your FP scripts folder. If your folder structure   was C:\\FP\\Tables then this folder would be C:\\FP\\Scripts.</li> <li>Run your DOF'ed FP table. Below is a sample section of the DOFLinx.INI file to configure the various devices. This is my setup, so be sure to edit it for your device / port numbers, best default times for devices and desired maximum on times.</li> </ol> <pre><code>FP_ATTEMPT_LINK=1\nLINK_LF=117,50,10000\nLINK_RF=125,50,10000\nLINK_LS=118,50,500\nLINK_RS=126,50,500\nLINK_ML=127,50,500\nLINK_MC=128,50,500\nLINK_MR=129,50,500\nLINK_BL=130,50,500\nLINK_BC=131,50,500\nLINK_BR=132,50,500\nLINK_SH=115,1000,5000\nLINK_GR=116,750,10000\nLINK_KN=124,120,500\nLINK_ST=102\nLINK_EB=101\nLINK_CN=106,105,103\nLINK_EX=104\n</code></pre>"},{"location":"systems/16_Future_Pinball_Link.html#if-i-want-to-dof-a-table-how-do-i-do-it","title":"If I want to DOF a table, how do I do it?","text":"<p>The FP code for DOF'ing a FP table is designed to be added in and left in regardless of DOFLinx being used. Ideally table authors will add this code to their tables in the same way it has been done for VP tables.</p> <p>The mechanics of the process are:</p> <ol> <li>Directly below your \"Dim\" statements add the line \"ExecuteGlobal   LoadExternalScript (\"DOFLinx.vbs\")</li> <li>As the first items in the standard FuturePinBall_BeginPlay() section   add the lines \"FF_Init\" and \"FF_DOFLinx=1\"</li> <li>Now do your coding.</li> </ol> <p>The image below shows the above steps implemented.</p> <p></p> <p>At its simplest replace \"PlaySound xx\" statements for flippers, slingshots, drop targets, bumpers and jets with \"FF_Sound LF,-1,xx\". The format is \"FF_Sound DD,HHHH,SSSSS\" , SSSSS is the original sound. The original sound is played when the DOFLinx link is not active. DD is the device signified by the device code (constant in the DOFLinx.vbs file). HHHH is the time to turn the device on for in hundredths of seconds, the special value of -1 will use the default on time setup by the user in the DOFLinx.INI file.</p> <p></p> <p>The image above shows the line that was, and the new line that replaces it. The left flipper is turned on for 10 seconds in this command. This will keep the left flipper on for a reasonable time or until the key is released and another \"FF\" command turns it off. If the user has set their maximum on time for this device to less than 10 seconds to protect their solenoids, then the left flipper solenoid will release sooner. It would be quite reasonable to set to time to 999999 upon flipper press.</p> <p></p> <p>In the key released section, you then turn off the left flipper off. For a simple flipper \"bang\" you could use time \"-1\" when turning the flipper on, and not turn the left flipper back off. This would use the users default on time for this device. Best practice is to turn it on then back off.</p> <p>More complex programming can be performed using a few more supplied procedures and functions:</p>"},{"location":"systems/16_Future_Pinball_Link.html#functions","title":"Functions","text":""},{"location":"systems/16_Future_Pinball_Link.html#ff_active-boolean","title":"FF_Active -- Boolean","text":"<p>Used to test if the link from FP to DOFLinx is active. True when the link is active, false when it is not.</p>"},{"location":"systems/16_Future_Pinball_Link.html#ff_isdevicedd-boolean","title":"FF_ISDevice(DD) -- Boolean","text":"<p>Allows you to test if a specific device is configured for the cabinet this table is being played on. The function will return true if the device is configured.</p> <p>Generally testing for a device is not required. If a message is sent for a device that does not exist, then the message will simply be ignored. Testing for devices is used by the supplied procedures FF_SOUND and FF_SOUNDVOL to determine if the device exists when determining if the original sound should be played or not.</p> <p>So, for example, there is no need to test if the Coin button exists before setting it to flash. Just set it, and if it exists, it will flash, if not, nothing will happen.</p> <p>Valid devices to test are:</p> <pre><code>DV_LF = Left flipper\nDV_RF = Right flipper\nDV_LS = Left slingshot\nDV_RS= Right slingshot\nDV_ML = Mid field left solenoid\nDV_MC = Mid field centre solenoid\nDV_MR = Mid field right solenoid\nDV_BL = Back left solenoid\nDV_BC = Back centre solenoid\nDV_BR = Back right solenoid\nDV_SH = Shaker motor\nDV_GR = Gear motor\nDV_KN = Knocker\nDV_FN = Fan\nDV_SR = Strobe\nDV_BK = Beacon\nDV_BE = Bell\nDV_C1 = Chime 1 (high)\nDV_C2 = Chime 2\nDV_C3 = Chime 3 (low)\nDV_RGB = RGB lighting\nDV_FLOL = Flasher, outside left\nDV_FLIL = Flasher, inside left\nDV_FLCN = Flasher, centre\nDV_FLOR = Flasher outside right\nDV_FLIR = Flasher, inside right\nBUT_ST = Start button\nBUT_EB = Extra Ball button\nBUT_EX = Exit button\nBUT_CN = Coin button\nBUT_LB = Launch ball button\nBUT_FR = Fire button\nBUT_P1 = Player 1\nBUT_P2 = Player 2\nBUT_PS = Pause\n</code></pre>"},{"location":"systems/16_Future_Pinball_Link.html#procedures","title":"Procedures","text":""},{"location":"systems/16_Future_Pinball_Link.html#ff_button-ddaaiiiiihhhhh","title":"FF_Button DD,AA,IIIII,HHHHH","text":"<ul> <li> <p>DD -- Button device to activate</p> <pre><code>BUT_ST = Start button\nBUT_EB = Extra Ball button\nBUT_EX = Exit button\nBUT_CN = Coin button\nBUT_LB = Launch ball button\nBUT_FR = Fire button\nBUT_P1 = Player 1\nBUT_P2 = Player 2\nBUT_PS = Pause\n</code></pre> </li> </ul> <ul> <li> <p>AA - The action to perform</p> <pre><code>BA_ON =Turn the button LED on\nBA_OFF = Turn the button LED off\nBA_TT = Turn on the button LED for the supplied hundredths of a second\nBA_FL = Flash the button LED for the number of iterations with the supplied time being the   duration between iterations\nBA_FD = Fade the button LED up and down for the number of iterations with the supplied time   being the duration to fade up / down\n</code></pre> </li> </ul> <ul> <li>IIIII -- The number of iterations to perform the action. For flash and fade cycles on is one iteration and off is another. So, if you want the button to flash on then off its 2 iterations. This way you can flash or fade a button LED leaving it on or off when the cycle is finished.</li> </ul> <ul> <li>HHHHH -- Hundredths of seconds per iteration</li> </ul>"},{"location":"systems/16_Future_Pinball_Link.html#ff_colour-cccccaahhhhhh","title":"FF_Colour CCCCC,AA,HHHHHH","text":"<ul> <li>CCCCCC -- a valid DOF colour name, ie Red, Light_cyan. \"Random\" is a valid colour name and will simply display a random colour from the currently active colour palette.</li> <li>AA -- the action to perform<ul> <li>RGB_DF = Start the default RGB colour cycle as set by the user in   DOFLinx. This will give automatic colour changes based on a fixed user   set colour, flipper initiated changes, or timed changes using either   the full colour palette or a restricted palette, as per standard   DOFLinx parameter and GAME_COLOUR settings. The colour name supplied   (CCCCC) is irrelevant for this action. Once started for a game the   default colour run cannot be stopped. It is an easy way to add colour   with one command for the entire table.</li> <li>RGB_TT = Change the RGB's to the supplied colour for the supplied time   then revert to the colour displayed before the command.</li> <li>RGB_CH = Change the colour to the new colour and leave it on until   over written by further commands.</li> </ul> </li> <li>HHHHHH -- hundredths of seconds to turn on the colour for. Maximum is 999999 or 9999 seconds.</li> </ul>"},{"location":"systems/16_Future_Pinball_Link.html#ff_dev-ddhhhhhh-activate-a-device-for-the-specified-time","title":"FF_Dev DD,HHHHHH -- Activate a device for the specified time","text":"<p>Turn on the device code for the specified time. The special time of minus one (-1) will use the default run time set by the user in their DOFLinx.INI parameters. An on time of zero (0) will turn the device off from a previous on command if the time period has not yet elapsed.</p> <p>This command is used when there is no sound required when the DOF link is not operational. It is the same as FF_Sound DD,HHHHHH, \" \"</p>"},{"location":"systems/16_Future_Pinball_Link.html#ff_dof-teeehhhhhh","title":"FF_DOF T,EEE,HHHHHH","text":"<p>This command triggers Direct Output Framework events as defined in the various DirectOutputxx.ini files. It is initially designed to trigger addressable LED commands, but there is no reason that any other \"E\" type command can't be triggered.</p> <ul> <li>T=Type, normally \"E\"\\</li> <li>EEE = The event trigger number\\</li> <li>HHHHHH = The duration to leave the trigger on in hundredths of seconds. Two special values exist, zero (0) will turn the trigger off, and minus one (-1) will turn the event on with no off time, normally for cases where the event has its own timer within DOF.</li> </ul> <p>FF_DOF \"E\",123,100 will turn on DOF event E123 for 1 second Note you must have first opened a ROM via the FF_ROM command to use any FF_DOF commands.</p>"},{"location":"systems/16_Future_Pinball_Link.html#ff_flasher-ddaaiiiihhhhhpppccccc","title":"FF_Flasher DD,AA,IIII,HHHHH,PPP,CCCCC","text":"<ul> <li> <p>DD- The device to activate.</p> <pre><code>DV_FLOL = Flasher, outside left\nDV_FLIL = Flasher, inside left\nDV_FLCN = Flasher, centre\nDV_FLOR = Flasher outside right\nDV_FLIR = Flasher, inside right\n</code></pre> </li> </ul> <ul> <li> <p>AA - The action to perform</p> <pre><code>FL_ON =Turn the flasher on\nFL_OFF = Turn the flasher off\nFL_TT = Turn on the flasher for the supplied hundredths of a second\nFL_FL = Flash the flasher for the number of iterations with the supplied time being the   duration between iterations\nFL_FD = Fade the flasher up and down for the number of iterations with the supplied time   being the duration to fade up / down\n</code></pre> </li> </ul> <ul> <li>IIIII -- The number of iterations to perform the action. For flash and fade cycles on is one iteration and off is another. So if you want the flasher to flash on then off its 2 iterations. This way you can flash or fade a flasher leaving it on when the cycle is finished.</li> <li>HHHHH -- Hundredths of seconds per iteration</li> <li><code>PPP</code> -- The maximum percentage intensity 0 -- 100. Ie, if set to 50 and fade (FL_FD) the flasher will fade up to 50% of the supplied colour and back to nothing.</li> <li>CCCCC -- The colour to use during the action. \"Random\" is a valid colour name and will simply display a random colour from the currently active colour palette.</li> </ul>"},{"location":"systems/16_Future_Pinball_Link.html#ff_init-initialise-the-force-feedback-ff-link-from-the-fp-side","title":"FF_Init -- initialise the force feedback (FF) link from the FP side.","text":"<p>This command must be executed as early as possible in table start up to enable the link to function correctly.</p>"},{"location":"systems/16_Future_Pinball_Link.html#ff_proc-ccccccaaaa","title":"FF_PROC CCCCCC,AAAA","text":"<p>Used to run an external command, CCCCC, with argument, AAAA. Not used by core DOFLinx but available for use if you want to have a table trigger some sort of special external event via program or batch file.</p>"},{"location":"systems/16_Future_Pinball_Link.html#ff_puplayer-cccccssssssaaa","title":"FF_PUPlayer CCCCC,SSSSSS,AAA","text":"<p>Used to run PUPlayer from FP. There are two CCCCC commands, PUP_INIT (1) and PUP_EVENT (2). You must issue a valid PUP_INIT in a table before you can issue PUP_EVENT commands. The PUP_INIT command should be placed in your timer to test once the DOFLinx link is established.</p> <p>The SSSSSS string will be the ROM name for a PUP_INIT command and the Event code for a PUP_EVENT. Argument AAA is zero for PUP_INIT, and must be a valid argument for a PUP_EVENT from 0 -- 255.</p> <p>Sample commands are:</p> <pre><code>PUPlayer PUP_INIT,\"trn_174h\",0\nPUPlayer PUP_EVENT,\"W11\",255\nPUPlayer PUP_EVENT,\"W44\",255\n</code></pre>"},{"location":"systems/16_Future_Pinball_Link.html#ff_rom-rrrrrr","title":"FF_ROM RRRRRR","text":"<p>If you plan to use FF_DOF commands to trigger DOF events, ie addressable LEDs, then you must start a ROM in the Direct Output Framework (DOF) first. Normally the ROM started is not a real ROM like in VP, but a fake ROM setup in the DOF Directoutput30.ini file to support things like addressable LED commands.</p> <p>The command is used as early in the FP scripts, but after FF_Init, and after the link is established. The best place is in the DOFLinx timer once the link is detected by the FP script as being in place. Sample syntax is;</p> <p><code>FF_ROM \"fp_motu\"</code></p> <p>See FF_DOF for details on how to send DOF commands from FP scripts.</p>"},{"location":"systems/16_Future_Pinball_Link.html#ff_sound-ddhhhhhhsssss-replaces-playsound-sssss","title":"FF_Sound DD,HHHHHH,SSSSS (replaces PlaySound SSSSS)","text":""},{"location":"systems/16_Future_Pinball_Link.html#ff_soundvol-ddhhhhhhsssssvv-replaces-playsound-sssssvv","title":"FF_SoundVol DD,HHHHHH,SSSSS,VV (replaces PlaySound SSSSS,VV)","text":"<ul> <li>SSSSS -- the sound to play when the FP to DOFLinx link is not active.</li> <li>VV -- The volume modifier for the standard PlaySound command</li> <li> <p>DD -- the device to activate.</p> <pre><code>DV_LF = Left flipper\nDV_RF = Right flipper\nDV_LS = Left slingshot\nDV_RS= Right slingshot\nDV_ML = Mid field left solenoid\nDV_MC = Mid field centre solenoid\nDV_MR = Mid field right solenoid\nDV_BL = Back left solenoid\nDV_BC = Back centre solenoid\nDV_BR = Back right solenoid\nDV_SH = Shaker motor\nDV_GR = Gear motor\nDV_KN = Knocker\nDV_FN = Fan\nDV_SR = Strobe\nDV_BK = Beacon\n</code></pre> </li> </ul> <p>Note</p> <p>SH,GR and KN will play the supplied sound unless DOFLinx indicates the required devices are present. With an active link presence is determined by DOFLinx having been supplied valid devices LINK_SH, LINK_GR and LINK_KN via the DOFLinx.INI configuration file.*</p> <ul> <li>HHHHHH -- hundredths of seconds to turn on the device for. Maximum is 999999 or 9999 seconds.</li> </ul> <p>Automatic sounds set on the object should not be used in this design. Doing so will cause the sound to play regardless of force feedback being active or not. For objects with sounds set you will need to remove the default sound and add the FF_Sound line, ie there is no PlaySound line to replace.</p> <p></p> <p>In this example the sound effect was \"slingshot\", it should be set it to \"none\" and then add the line below in the \"_hit\" code.</p> <p></p> <p>Actions can be added to other events on the table. For example, when the user tilts the following will run the shaker motor and flash the RGB devices red. The PlaySound \"Tilt\" was the original action. The new actions simply add to that.</p> <p></p> <p>An example of complementing a playfield flasher with the RGB flashing the same colour for the same time is given below. Note the FF_Colour is measured in hundredths of seconds (value of 100 below) whereas the FlashForMs is in milliseconds (value of 1000 below).</p> <p></p> <p>If you want to set some force feedback items when a table starts (ie start colours, set button LEDs) you will need to set up a timer. The reason is that any force feedback control code, other than initialisation stuff, placed in the FuturePinBall_BeginPlay() section is likely to execute before the link has been properly established. Force feedback control code executed before the link is properly established will be effectively be ignored.</p> <p>Doing this is simple, add a timer like this to the side of the playfield.</p> <p></p> <p>Then add some code like that that below. With the timer set to 500ms the table will test for an active link up to 30 times at \u00bd second intervals, meaning it will test for 15 seconds after the table starts. The link is normally up within 1 second, so a 15 second wait will be fine. Once a link is detected some actions can be performed and the timer is disabled for the rest of the game.</p> <p>The lines to customise in the sample below are:</p> <pre><code>FF_Button BUT_CN,BA_FL,999,300\nFF_Button BUT_EX,BA_ON,0,0\nFF_Colour \" \",RGB_DF,0\n</code></pre> <p>Of course you can add more lines of code for initialisation. Be careful to not remove the DOFTimer.enabled=false statement as you want the timer to stop once it has been executed once.</p> <p></p>"},{"location":"systems/17_Pinball_FX2_Memory_Triggers_--_Full_Force_Feedback.html","title":"Pinball FX2 Memory Triggers -- Full Force Feedback","text":"<p>If a specific FX2 table has been memory mapped, then full force feedback is possible. DOFLinx looks for a trigger configuration file named \"GameName.FX2\" first, then \"default.fx2\", if neither are found then basic keyboard monitoring will be used.</p> <p>DOFLinx will first look in the PATH_FX2= path if configured, if not found there it will look in the DOFLinx.exe folder. It is recommended that you do set the PATH_FX2= parameter to a separate folder just for FX2 trigger files to keep things neat and tidy.</p> <p>The trigger configuration file will look a bit like this:</p> <pre><code>##################\n#\n# Bob's Burgers Pinball\n# DOFLinx force feedback configuration file v6\n#\n##################\n[STARTUP]\nFF_ROM=fx2_bb\n[MEMORY TRIGGERS - CORE]\nGAMEMODE=8879B4,FF\nSCOREMODE=887919,FF\nANIMEMODE=88791B,FF\nLAUNCHMODE=88791A,FF\nLAUNCHBALL=883CF4,FF\nLeftFlipper=88781C,FF\nRightFlipper=88781C,FF00\nNudge=88B8F4,FF000000\n[MEMORY TRIGGERS - TABLE BASED]\nLeft_Slingshot=882FC0,FF,2E4,0C,20,08\nRight_Slingshot=882FC0,FF,2E4,14,20,08\nBumper1=882FC0,FF,2E4,00,20,08\nBumper2=882FC0,FF,2E4,04,20,08\nBumper3=882FC0,FF,2E4,08,20,08\nBumper1_Flasher=882FC0,FF,2B0,0C,00,04,A4\nBumper2_Flasher=882FC0,FF,2B0,0C,04,04,A4\nBumper3_Flasher=882FC0,FF,2B0,0C,08,04,A4\nLeft_SlingShot_Flasher=882FC0,FF,2B0,0C,0C,04,A4\nRight_SlingShot_Flasher=882FC0,FF,2B0,0C,14,04,A4\nCrane_Flasher=882FC0,FF,2B0,0C,1C,04,A4\nFerrisWheel_Flasher1=882FC0,FF,2B0,0C,20,04,A4\nFerrisWheel_Flasher2=882FC0,FF,2B0,0C,24,04,A4\nLamp1_Flasher=882FC0,FF,2B0,0C,28,04,A4\nLamp2_Flasher=882FC0,FF,2B0,0C,2C,04,A4\nLamp3_Flasher=882FC0,FF,2B0,0C,30,04,A4\nLamp4_Flasher=882FC0,FF,2B0,0C,34,04,A4\nSinkHole_Flasher=882FC0,FF,2B0,0C,38,04,A4\nWonderWharf_Left_Flasher=882FC0,FF,2B0,0C,3C,04,A4\nWonderWharf_Right_Flasher=882FC0,FF,2B0,0C,40,04,A4\n[COMMANDS]\nGAMEMODE|ON|FF_Colour Black,RGB_DF,0|FF_Flasher\nDV_FLOL,FL_FD,6,750,50,Orange|FF_Flasher\nDV_FLOR,FL_FD,6,750,50,Orange|FF_Flasher\nDV_FLIL,FL_FD,6,750,50,Yellow|FF_Flasher\nDV_FLIR,FL_FD,6,750,50,Yellow|FF_Flasher\nDV_FLCN,FL_FD,6,750,50,Orange|FF_B2S B2SStartAnimation Sign\nLAUNCHMODE|ON|FF_Button BUT_LB,BA_FL,10000,500|FF_DOF E310,5000\nLAUNCHMODE|OFF|FF_Button BUT_LB,BA_OFF,0,0\nLAUNCHBALL|OFF|FF_Dev DV_MR,-1|FF_B2S B2SStartAnimation\nSign|FF_DOF E310,0\nSCOREMODE|ON|FF_Flasher DV_FLOL,FL_OFF,1,1,100,Random|FF_Flasher\nDV_FLIL,FL_OFF,1,1,100,Random|FF_Flasher\nDV_FLCN,FL_OFF,1,1,100,Random|FF_Flasher\nDV_FLIR,FL_OFF,1,1,100,Random|FF_Flasher\nDV_FLOR,FL_OFF,1,1,100,Random|FF_Dev DV_SR,0|FF_Dev DV_BK,0|FF_B2S\nB2SStopAllAnimations|FF_DOF E415,-1\nLeftFlipper|ON|FF_Dev DV_LF,10000\nLeftFlipper|OFF|FF_Dev DV_LF,0\nRightFlipper|ON|FF_Dev DV_RF,10000\nRightFlipper|OFF|FF_Dev DV_RF,0\nNudge|ON|FF_Dev DV_SH,10000|FF_Colour Red,RGB_TT,1500|FF_Flasher\nDV_FLCN,FL_ON,1,1,100,Red|FF_Flasher\nDV_FLOL,FL_ON,1,1,100,Red|FF_Flasher\nDV_FLOR,FL_ON,1,1,100,Red|FF_B2S B2SStartAnimation,BurgerBall|FF_DOF E402,-1\nNudge|OFF|FF_Dev DV_SH,250|FF_Flasher\nDV_FLCN,FL_OFF,1,1,100,Red|FF_Flasher\nDV_FLOL,FL_OFF,1,1,100,Red|FF_Flasher DV_FLOR,FL_OFF,1,1,100,Red\nLeft_Slingshot|ON|FF_Dev DV_LS,-1|FF_DOF E110,-1\nRight_Slingshot|ON|FF_Dev DV_RS,-1|FF_DOF E111,-1\nBumper1|ON|FF_Dev DV_BL,-1|FF_DOF E120,-1\nBumper2|ON|FF_Dev DV_BC,-1|FF_DOF E121,-1\nBumper3|ON|FF_Dev DV_BR,-1|FF_DOF E122,-1\nBumper1_Flasher|ON|FF_Flasher DV_FLIL,FL_ON,1,1,100,Random|FF_B2S\nB2SStartAnimation,LouiseFace\nBumper1_Flasher|OFF|FF_Flasher DV_FLIL,FL_OFF,1,1,100,Random\nBumper2_Flasher|ON|FF_Flasher DV_FLCN,FL_ON,1,1,100,Random|FF_B2S\nB2SStartAnimation,GeneFace\nBumper2_Flasher|OFF|FF_Flasher DV_FLCN,FL_OFF,1,1,100,Random\nBumper3_Flasher|ON|FF_Flasher DV_FLIR,FL_ON,1,1,100,Random|FF_B2S\nB2SStartAnimation,TinaFace\nBumper3_Flasher|OFF|FF_Flasher DV_FLIR,FL_OFF,1,1,100,Random\nLeft_SlingShot_Flasher|ON|FF_Colour Yellow,RGB_TT,125|FF_B2S\nB2SStartAnimation,BobFace\nRight_SlingShot_Flasher|ON|FF_Colour Yellow,RGB_TT,125|FF_B2S\nB2SStartAnimation,LindaFace\nCrane_Flasher|ON|FF_Flasher DV_FLOR,FL_ON,1,1,100,Yellow|FF_B2S\nB2SStartAnimation,Windows|FF_DOF E413,-1\nCrane_Flasher|OFF|FF_Flasher DV_FLOR,FL_OFF,1,1,100,Yellow\nFerrisWheel_Flasher1|ON|FF_Flasher\nDV_FLOL,FL_ON,1,1,100,Silver|FF_B2S B2SStartAnimation,Windows|FF_DOF\nE410,-1\nFerrisWheel_Flasher1|OFF|FF_Flasher DV_FLOL,FL_OFF,1,1,100,Silver\nFerrisWheel_Flasher2|ON|FF_Flasher\nDV_FLOL,FL_ON,1,1,100,Silver|FF_B2S\nB2SStartAnimationReverse,Windows|FF_DOF E412,-1\nFerrisWheel_Flasher2|OFF|FF_Flasher DV_FLOL,FL_OFF,1,1,100,Silver\nLamp1_Flasher|ON|FF_Dev DV_SR,2000|FF_B2S B2SSetData 51,1|FF_B2S\nB2SSetData 58,1|FF_DOF E140,-1\nLamp2_Flasher|ON|FF_Dev DV_SR,2000|FF_B2S B2SSetData 52,1|FF_B2S\nB2SSetData 57,1|FF_DOF E141,-1\nLamp3_Flasher|ON|FF_Dev DV_SR,2000|FF_B2S B2SSetData 53,1|FF_B2S\nB2SSetData 56,1|FF_DOF E301,-1\nLamp4_Flasher|ON|FF_Dev DV_SR,2000|FF_B2S B2SSetData 54,1|FF_B2S\nB2SSetData 55,1|FF_DOF E308,-1\nSinkHole_Flasher|ON|FF_Flasher DV_FLOL,FL_ON,1,1,100,Lime|FF_B2S\nB2SStopAnimation Windows|FF_DOF E407,-1\nSinkHole_Flasher|OFF|FF_Flasher DV_FLOL,FL_OFF,1,1,100,Lime|FF_B2S\nB2SSetData 51,0|FF_B2S B2SSetData 52,0|FF_B2S B2SSetData\n53,0|FF_B2S B2SSetData 54,0|FF_B2S B2SSetData 55,0|FF_B2S\nB2SSetData 56,0|FF_B2S B2SSetData 57,0|FF_B2S B2SSetData 58,0\nWonderWharf_Left_Flasher|ON|FF_Flasher\nDV_FLOL,FL_ON,1,1,100,Yellow|FF_B2S B2SSetData 1,1|FF_DOF E411,-1\nWonderWharf_Left_Flasher|OFF|FF_Flasher\nDV_FLOL,FL_OFF,1,1,100,Yellow\nWonderWharf_Right_Flasher|ON|FF_Flasher\nDV_FLOR,FL_ON,1,1,100,Yelow|FF_B2S B2SSetData 2,1|FF_DOF E414,-1\nWonderWharf_Right_Flasher|OFF|FF_Flasher\nDV_FLOR,FL_OFF,1,1,100,Yelow\n</code></pre> <p>There are three sections, but only two types of section. They are TRIGGERS and COMMANDS. TRIGGERS are the detected events that initiate the COMMANDS. All of the triggers need to be discovered by research and memory mapping of FX2 tables. Never change a provided trigger unless you have really good reason to, it will likely screw things up considerably.</p> <p>The two different TRIGGER sections are CORE and TABLE BASED. DO NOT rename the CORE triggers. The Table based triggers can have any name you like, so long as it matches the name used for its commands in the COMMAND section.</p> <p>The COMMANDS are the instructions to carry out when the trigger event occurs. Every trigger event can have an ON and OFF command, ie LeftFlipper ON action would be to turn your left flipper solenoid on, the LeftFlipper OFF command would be to turn it off. Not all triggers need both ON and OFF commands. If a trigger does not need any commands its command line can be left with no commands or simply omitted altogether.</p> <p>The commands are a subset of those available for Future Pinball and documented in the previous section. The available commands are</p> <ul> <li>FF_Dev</li> <li>FF_Colour</li> <li>FF_Button</li> <li>FF_Flasher</li> <li>FF_ROM</li> <li>FF_DOF</li> </ul> <p>Please note, all times used are in milliseconds. For Future Pinball they are in hundredths of a second. So for a FX2 command, 1000 = 1 second.</p> <p>You can have as many commands on a line as you like separated with a pipe (|) character.</p> <p>There is one additional command for Pinball FX2 for use with B2S back glasses, FF_B2S</p>"},{"location":"systems/17_Pinball_FX2_Memory_Triggers_--_Full_Force_Feedback.html#ff_b2s-cccpppp-send-a-command-with-parameters-to-the-b2s-back-glass","title":"FF_B2S CCC,PPPP -- Send a command with parameter(s) to the B2S back glass","text":"<p>The command is subset of the standard B2S commands. The valid commands are;</p> <ul> <li>B2SSetData</li> <li>B2SStartAnimation</li> <li>B2SStartAnimationReverse</li> <li>B2SStopAnimation</li> <li>B2SStapAllAnimations</li> </ul> <p>For example</p> <ul> <li>FF_B2S B2SStartAnimation,MyAnimation -- start the animation you called MYANIMATION in the B2S</li> <li>FF_B2S B2SStopAllAnimation -- cease all animations</li> <li>FF_B2S B2SSetData 15,1 -- turn on Lamp 15</li> <li>FF_B2S B2SSetData 4,0 -- turn off Lamp 4</li> </ul> <p>Details of these commands and their parameters can be found in the B2S documentation.</p> <p>One special note, when using DOFLinx to communicate with a B2S back glass all animation names must be IN CAPITAL LETTERS ONLY when you make / edit your back glass (directb2s) file.</p> <p>B2S back glass files are placed in the path as set by PATH_FX2_B2S and should have the same name as the FX2 file for that same game.</p> <p>For B2S back glasses to be visible you will need to turn off the relocation of the back glass within Pinball FX2 cabinet settings (Back Glass Repositioning = Off). This does turn it off for all games, so we'd better get directB2S files for every game happening soon!</p> <p>FX2 trigger configuration files have been setup with a default set of commands, you don't need to edit them if you don't want to.</p>"},{"location":"systems/18_Pinball_FX3_Memory_Triggers_--_Full_Force_Feedback.html","title":"Pinball FX3 Memory Triggers -- Full Force Feedback","text":"<p>Similar to FX2 ...... but just not written yet. In fact, unlikely to ever get written. I'm sure if you have the need to know that we'll be in touch.</p>"},{"location":"systems/19_MAME_Commands__Triggers_and_Actions_--_Full_Force_Feedback.html","title":"MAME Commands, Triggers and Actions -- Full Force Feedback","text":"<p>You will need to use a version of MAME with the functionality added to talk to DOFLinx. Install a version of MAME that matches the MAME64.exe included with DOFLinx then replace MAME64.exe. In addition, you will need to make sure the following is setup in your MAME.INI.</p> <pre><code># OSD OUTPUT OPTIONS  \n#  \noutput network\n</code></pre> <p>MAME files contain commands, triggers and actions that are run when MAME games start and stop. In the same way as FX3 there are four XX.MAME files;</p> <ol> <li><code>All_Pre.MAME</code> -- this is executed first for every MAME game when it   starts</li> <li><code>Default.MAME</code> -- this runs for any game that does not have a game   specific file</li> <li><code>XXXX.MAME</code> -- where XXXX is the specific MAME game that is running</li> <li><code>All_Post.MAME</code> -- this is executed last for every MAME game when it   starts</li> </ol> <p>Only three will ever be run. Only default or the game specific file (2 or 3) can run, not both.</p> <p>The first three of these has the sections;</p> <pre><code>[STARTUP]  \n[SHUTDOWN]  \n[COMMANDS]  \n[CLEAR COMMANDS]\n</code></pre> <p>The last has;</p> <pre><code>[COMMANDS]  \n[CLEAR COMMANDS]\n</code></pre> <p>The actual game MAME file also has a [SCORE] section.</p> <p>The [STARTUP] and [SHUTDOWN] sections contain pretty much any parameters that can be contained in either the <code>DOFLinx.INI</code> or supplementary INI files. For example, BUTTONS_ON= or FF_ROM= .</p> <p>Both the [COMMANDS] and [CLEAR COMMANDS] sections contain the triggers and actions associated with the trigger from the game. For example, a trigger of \"led0\" can have both on and off actions such as;</p> <pre><code>led0|ON|FF_Button BUT_P1,BA_ON,0,0  \nled0|OFF|FF_Button BUT_P1,BA_OFF,0,0\n</code></pre> <p>The above will turn on the Player 1 button when led0 is \"1\" and turn it off when led0 is \"0\". In many MAME games this effectively flashes the Player 1 button when credits are inserted.</p> <p>The [CLEAR COMMANDS] section exists to remove any commands that you do not want processed. It is most often used in the All_Post.MAME file to remove commands that are not relevant to your setup and may appear in a number of other MAME files. It saves editing all of those game files individually.</p> <p>The [SCORE] section allows details for the polling of the score in the MAME game. Monitoring of score changes and reaching particular scores can be setup as triggers for any sort of actions.</p> <p>One of the machines included with MAME is the Nintendo Entertainment System (NES). Running a NES game in MAME is achieved using a command line like</p> <pre><code>MAME64 nes -cart Tetris.zip\n</code></pre> <p>When MAME starts it reports \"nes\" as the game not the individual cartridge. As such, to get frce feedback via the correct MAME file for DOFLinx you will need to have your front end (or some other method) copy in the correct nes.XXXXXXXXX.MAME file to the nes.MAME file. Below is my setup from PinUp Popper.</p> <p></p>"}]}